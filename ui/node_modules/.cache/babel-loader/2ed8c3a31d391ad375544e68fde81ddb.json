{"ast":null,"code":"import store from './store.js';\n\nvar getTasks = () => {\n  fetch('/Tasks').then(response => {\n    return response.json();\n  }).then(data => {\n    console.log(data);\n    let obj = {};\n    let arr = [];\n\n    const Tasks = data._embedded.Tasks.map(task => {\n      console.log(task);\n      obj[task.name] = task.tasks;\n      arr = arr.concat(task.name);\n      console.log(arr);\n    });\n\n    const newstate = {\n      ToDoObject: obj,\n      ToDoList: arr,\n      CurrentList: arr[0]\n    };\n    console.log(newstate);\n    store.dispatch({\n      type: \"UPDATE_STATE\",\n      state: newstate\n    });\n  });\n};\n\nvar postTasks = json => {\n  fetch(\"/Tasks\", {\n    method: \"POST\",\n    body: json,\n    //\"{\\\"name\\\":\\\"oldnamenew\\\",\\\"tasks\\\":[{\\\"name\\\":\\\"nameone\\\"},{\\\"name\\\":\\\"nametwo\\\"}]}\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  });\n};\n\nvar deleteTask = id => {\n  fetch(\"/Tasks/\" + id, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  });\n};","map":{"version":3,"sources":["/Users/willweatherman/gs-accessing-mongodb-data-rest/ui/src/api.js"],"names":["store","getTasks","fetch","then","response","json","data","console","log","obj","arr","Tasks","_embedded","map","task","name","tasks","concat","newstate","ToDoObject","ToDoList","CurrentList","dispatch","type","state","postTasks","method","body","headers","deleteTask","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;;AAGA,IAAIC,QAAQ,GAAG,MAAM;AACjBC,EAAAA,KAAK,CAAC,QAAD,CAAL,CAAgBC,IAAhB,CAAsBC,QAAD,IAAc;AAC/B,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAFD,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAIG,GAAG,GAAG,EAAV;AACA,QAAIC,GAAG,GAAG,EAAV;;AACA,UAAMC,KAAK,GAAGL,IAAI,CAACM,SAAL,CAAeD,KAAf,CAAqBE,GAArB,CAAyBC,IAAI,IAAI;AAC3CP,MAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACAL,MAAAA,GAAG,CAACK,IAAI,CAACC,IAAN,CAAH,GAAiBD,IAAI,CAACE,KAAtB;AACAN,MAAAA,GAAG,GAAGA,GAAG,CAACO,MAAJ,CAAWH,IAAI,CAACC,IAAhB,CAAN;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KALa,CAAd;;AAMA,UAAMQ,QAAQ,GAAG;AACbC,MAAAA,UAAU,EAAEV,GADC;AAEbW,MAAAA,QAAQ,EAAEV,GAFG;AAGbW,MAAAA,WAAW,EAAEX,GAAG,CAAC,CAAD;AAHH,KAAjB;AAKAH,IAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;AACAlB,IAAAA,KAAK,CAACsB,QAAN,CAAe;AAACC,MAAAA,IAAI,EAAE,cAAP;AAAuBC,MAAAA,KAAK,EAAEN;AAA9B,KAAf;AACH,GAnBD;AAoBH,CArBD;;AAuBI,IAAIO,SAAS,GAAIpB,IAAD,IAAU;AACtBH,EAAAA,KAAK,CAAC,QAAD,EAAW;AACZwB,IAAAA,MAAM,EAAE,MADI;AAEZC,IAAAA,IAAI,EAAEtB,IAFM;AAGZ;AACAuB,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAJG,GAAX,CAAL;AAQH,CATD;;AAUA,IAAIC,UAAU,GAAIC,EAAD,IAAQ;AACrB5B,EAAAA,KAAK,CAAC,YAAW4B,EAAZ,EAAgB;AACjBJ,IAAAA,MAAM,EAAE,QADS;AAEjBE,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAFQ,GAAhB,CAAL;AAMH,CAPD","sourcesContent":["import store from './store.js'\n\n\nvar getTasks = () => {\n    fetch('/Tasks').then((response) => {\n        return response.json();\n    }).then((data) => {\n        console.log(data);\n        let obj = {}\n        let arr = []\n        const Tasks = data._embedded.Tasks.map(task => {\n            console.log(task)\n            obj[task.name] = task.tasks\n            arr = arr.concat(task.name)\n            console.log(arr)\n        })\n        const newstate = {\n            ToDoObject: obj,\n            ToDoList: arr,\n            CurrentList: arr[0]\n        }\n        console.log(newstate)\n        store.dispatch({type: \"UPDATE_STATE\", state: newstate})\n    })\n}\n\n    var postTasks = (json) => {\n        fetch(\"/Tasks\", {\n            method: \"POST\",\n            body: json,\n            //\"{\\\"name\\\":\\\"oldnamenew\\\",\\\"tasks\\\":[{\\\"name\\\":\\\"nameone\\\"},{\\\"name\\\":\\\"nametwo\\\"}]}\",\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        })\n    }\n    var deleteTask = (id) => {\n        fetch(\"/Tasks/\"+ id, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        })\n    }\n\n"]},"metadata":{},"sourceType":"module"}