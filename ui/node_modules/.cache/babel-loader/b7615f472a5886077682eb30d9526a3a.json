{"ast":null,"code":"import { createStore } from 'redux';\n\nfunction todos(state = {}, action) {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return state.todos.concat([action.text]);\n\n    case 'CHANGE_LIST':\n      state.CurrentList = action.text;\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nlet store = createStore(todos, {\n  ToDoObject: {\n    \"ONE\": [\"HIYA\", \"HELLLOOOO\"],\n    \"TWO\": [\"BYEYA\", \"GOODBYEE\"]\n  },\n  ToDoList: [\"ONE\", \"TWO\"],\n  CurrentList: \"TWO\"\n});\n\nvar getTasks = () => {\n  fetch('/Tasks').then(response => {\n    return response.json();\n  }).then(data => {\n    console.log(data);\n    let obj = {};\n\n    const Tasks = data._embedded.Tasks.map(task => {\n      console.log(task);\n      obj[task.name] = task.tasks;\n    });\n\n    store = createStore(todos, obj);\n  });\n};\n\ngetTasks();\nexport default store;","map":{"version":3,"sources":["/Users/willweatherman/gs-accessing-mongodb-data-rest/ui/src/store.js"],"names":["createStore","todos","state","action","type","concat","text","CurrentList","store","ToDoObject","ToDoList","getTasks","fetch","then","response","json","data","console","log","obj","Tasks","_embedded","map","task","name","tasks"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;;AAEA,SAASC,KAAT,CAAeC,KAAK,GAAG,EAAvB,EAA2BC,MAA3B,EAAmC;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAOF,KAAK,CAACD,KAAN,CAAYI,MAAZ,CAAmB,CAACF,MAAM,CAACG,IAAR,CAAnB,CAAP;;AACJ,SAAK,aAAL;AACIJ,MAAAA,KAAK,CAACK,WAAN,GAAoBJ,MAAM,CAACG,IAA3B;AACA,aAAOJ,KAAP;;AACJ;AACI,aAAOA,KAAP;AAPR;AASH;;AACD,IAAIM,KAAK,GAAGR,WAAW,CAACC,KAAD,EAAQ;AAC3BQ,EAAAA,UAAU,EAAC;AACP,WAAO,CAAC,MAAD,EAAS,WAAT,CADA;AAEP,WAAO,CAAC,OAAD,EAAU,UAAV;AAFA,GADgB;AAK3BC,EAAAA,QAAQ,EAAC,CAAC,KAAD,EAAQ,KAAR,CALkB;AAM3BH,EAAAA,WAAW,EAAE;AANc,CAAR,CAAvB;;AAQA,IAAII,QAAQ,GAAG,MAAM;AACjBC,EAAAA,KAAK,CAAC,QAAD,CAAL,CAAgBC,IAAhB,CAAsBC,QAAD,IAAc;AAAE,WAAOA,QAAQ,CAACC,IAAT,EAAP;AAAyB,GAA9D,EAAgEF,IAAhE,CAAsEG,IAAD,IAAU;AAC3EC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAIG,GAAG,GAAG,EAAV;;AACA,UAAMC,KAAK,GAAGJ,IAAI,CAACK,SAAL,CAAeD,KAAf,CAAqBE,GAArB,CAAyBC,IAAI,IAAI;AAC3CN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACAJ,MAAAA,GAAG,CAACI,IAAI,CAACC,IAAN,CAAH,GAAiBD,IAAI,CAACE,KAAtB;AACH,KAHa,CAAd;;AAMAjB,IAAAA,KAAK,GAAGR,WAAW,CAACC,KAAD,EAAQkB,GAAR,CAAnB;AACH,GAVD;AAWH,CAZD;;AAaAR,QAAQ;AAGR,eAAeH,KAAf","sourcesContent":["import { createStore } from 'redux'\n\nfunction todos(state = {}, action) {\n    switch (action.type) {\n        case 'ADD_TODO':\n            return state.todos.concat([action.text])\n        case 'CHANGE_LIST':\n            state.CurrentList = action.text\n            return state\n        default:\n            return state\n    }\n}\nlet store = createStore(todos, {\n    ToDoObject:{\n        \"ONE\": [\"HIYA\", \"HELLLOOOO\"],\n        \"TWO\": [\"BYEYA\", \"GOODBYEE\"]\n    },\n    ToDoList:[\"ONE\", \"TWO\"],\n    CurrentList: \"TWO\"\n})\nvar getTasks = () => {\n    fetch('/Tasks').then((response) => { return response.json(); }).then((data) => {\n        console.log(data);\n        let obj = {}\n        const Tasks = data._embedded.Tasks.map(task => {\n            console.log(task)\n            obj[task.name] = task.tasks\n        })\n\n\n        store = createStore(todos, obj)\n    });\n}\ngetTasks()\n\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}