{"ast":null,"code":"import React from'react';import'../stylesheets/bootstrap.css';import{connect}from'react-redux';import{random,genFields}from'../utils';import{changeSort}from\"../actions\";import TrashCanContainer from\"./TrashCans\";function Teams(props){return/*#__PURE__*/React.createElement(\"div\",{className:\"ColumnContainer\"},props.sortedStats.length>0?genFields(props.sortedStats,props.currentList).stats.map(function(i){var counter=1;return/*#__PURE__*/React.createElement(\"div\",{key:random(),className:\"Column\"},/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){changeSort(i);},className:\"contentButton \"+(props.sortName===i?\"active\":\"\")},i),genFields(props.sortedStats,props.currentList).info.map(function(y){counter++;return/*#__PURE__*/React.createElement(\"div\",{key:random(),className:\"Field\",style:counter%2===0?{backgroundColor:\"gray\"}:{}},i===\"officialLogoImageSrc\"?/*#__PURE__*/React.createElement(\"img\",{alt:\"\",className:\"Image\",src:y[i]}):y[i]);}));}):/*#__PURE__*/React.createElement(\"div\",{className:\"EmptyList\"},\"You current filter/search has no results.\"),props.sortedStats.length>0?/*#__PURE__*/React.createElement(TrashCanContainer,{sortedStats:props.sortedStats}):null);}var mapStateToProps=function mapStateToProps(state){return{};};var mapDispatchToProps={};var TeamsContainer=connect(mapStateToProps,mapDispatchToProps)(Teams);export default TeamsContainer;","map":{"version":3,"sources":["/Users/willweatherman/gs-accessing-mongodb-data-rest/ui/src/components/Teams.jsx"],"names":["React","connect","random","genFields","changeSort","TrashCanContainer","Teams","props","sortedStats","length","currentList","stats","map","i","counter","sortName","info","y","backgroundColor","mapStateToProps","state","mapDispatchToProps","TeamsContainer"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,8BAAP,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,MAAT,CAAiBC,SAAjB,KAAkC,UAAlC,CACA,OAAQC,UAAR,KAAyB,YAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,aAA9B,CAKA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CAClB,mBACI,2BAAK,SAAS,CAAC,iBAAf,EACMA,KAAK,CAACC,WAAN,CAAkBC,MAAlB,CAA2B,CAA5B,CAAiCN,SAAS,CAACI,KAAK,CAACC,WAAP,CAAoBD,KAAK,CAACG,WAA1B,CAAT,CAAgDC,KAAhD,CAAsDC,GAAtD,CAA0D,SAAAC,CAAC,CAAI,CACjG,GAAIC,CAAAA,OAAO,CAAG,CAAd,CACA,mBACA,2BAAK,GAAG,CAAEZ,MAAM,EAAhB,CAAoB,SAAS,CAAC,QAA9B,eACI,8BAAQ,OAAO,CAAE,kBAAM,CAACE,UAAU,CAACS,CAAD,CAAV,CAAc,CAAtC,CAAwC,SAAS,CAAE,kBAAoBN,KAAK,CAACQ,QAAN,GAAmBF,CAAnB,CAAuB,QAAvB,CAAiC,EAArD,CAAnD,EACKA,CADL,CADJ,CAKQV,SAAS,CAACI,KAAK,CAACC,WAAP,CAAoBD,KAAK,CAACG,WAA1B,CAAT,CAAgDM,IAAhD,CAAqDJ,GAArD,CAAyD,SAAAK,CAAC,CAAI,CAC1DH,OAAO,GACP,mBACI,2BAAK,GAAG,CAAEZ,MAAM,EAAhB,CAAoB,SAAS,CAAC,OAA9B,CAAsC,KAAK,CAAGY,OAAO,CAAG,CAAV,GAAgB,CAAhB,CAAoB,CAACI,eAAe,CAAE,MAAlB,CAApB,CAAgD,EAA9F,EACML,CAAC,GAAK,sBAAP,cAAiC,2BAAK,GAAG,CAAC,EAAT,CAAY,SAAS,CAAC,OAAtB,CAA8B,GAAG,CAAEI,CAAC,CAACJ,CAAD,CAApC,EAAjC,CAA8EI,CAAC,CAACJ,CAAD,CADpF,CADJ,CAKH,CAPD,CALR,CADA,CAiBC,CAnBiC,CAAjC,cAmBK,2BAAK,SAAS,CAAC,WAAf,8CApBV,CAqBMN,KAAK,CAACC,WAAN,CAAkBC,MAAlB,CAA2B,CAA5B,cAAiC,oBAAC,iBAAD,EAAmB,WAAW,CAAEF,KAAK,CAACC,WAAtC,EAAjC,CAA2G,IArBhH,CADJ,CAyBH,CAED,GAAMW,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,EAAL,EAA7B,CAGA,GAAMC,CAAAA,kBAAkB,CAAG,EAA3B,CAGA,GAAMC,CAAAA,cAAc,CAAGrB,OAAO,CAC1BkB,eAD0B,CAE1BE,kBAF0B,CAAP,CAGrBf,KAHqB,CAAvB,CAKA,cAAegB,CAAAA,cAAf","sourcesContent":["import React from 'react';\nimport '../stylesheets/bootstrap.css';\nimport { connect } from 'react-redux';\nimport { random, genFields } from '../utils'\nimport {changeSort} from \"../actions\";\nimport TrashCanContainer from \"./TrashCans\";\n\n\n\n\nfunction Teams(props) {\n    return (\n        <div className=\"ColumnContainer\">\n            {(props.sortedStats.length > 0) ? genFields(props.sortedStats, props.currentList).stats.map(i => {\n            let counter = 1\n            return (\n            <div key={random()} className=\"Column\">\n                <button onClick={() => {changeSort(i)}} className={\"contentButton \" + (props.sortName === i ? \"active\": \"\")}>\n                    {i}\n                </button>\n                {\n                    genFields(props.sortedStats, props.currentList).info.map(y => {\n                        counter++\n                        return (\n                            <div key={random()} className=\"Field\" style={(counter % 2 === 0 ? {backgroundColor: \"gray\"} : {} )}>\n                                {(i === \"officialLogoImageSrc\") ? <img alt=\"\" className=\"Image\" src={y[i]}/> : y[i]}\n                            </div>\n                        )\n                    })\n                }\n                </div>\n                )\n            }) : (<div className=\"EmptyList\">You current filter/search has no results.</div>)}\n            {(props.sortedStats.length > 0) ? <TrashCanContainer sortedStats={props.sortedStats}></TrashCanContainer> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = {\n};\n\nconst TeamsContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Teams);\n\nexport default TeamsContainer;\n"]},"metadata":{},"sourceType":"module"}