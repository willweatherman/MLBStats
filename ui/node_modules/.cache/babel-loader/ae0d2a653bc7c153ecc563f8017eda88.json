{"ast":null,"code":"import React from'react';import'../stylesheets/form.css';import'../stylesheets/bootstrap.css';import{connect}from'react-redux';import{postTeam}from'../api.js';import store from\"../store\";import{useHistory}from\"react-router-dom\";// function ChangeList(i) {\n//     // getTasks()\n//     store.dispatch({type: \"CHANGE_LIST\", text: i})\n// }\n// function ChangeRoute() {\n//     console.log(\"changeroute\")\n// }\nfunction ChangeLosses(e){var val=parseInt(e.target.value);if(isNaN(val)||val<0)val=0;store.dispatch({type:\"UPDATE_LOSSES\",text:val});store.dispatch({type:\"UPDATE_AVG\"});}function ChangeWins(e){var val=parseInt(e.target.value);if(isNaN(val)||val<0)val=0;store.dispatch({type:\"UPDATE_WINS\",text:val});store.dispatch({type:\"UPDATE_AVG\"});}function ProcessForm(e,history){e.preventDefault();var ids=[\"inputCity\",\"inputName\",\"inputAbbreviation\",\"inputImgSrc\",\"inputTAB\",\"inputRuns\",\"inputHits\",\"inputARE\",\"inputIPI\",\"inputAH\",\"inputIPL\",\"inputTC\",\"inputFTO\",\"inputWins\",\"inputLosses\",\"inputWLP\"];var values={};ids.map(function(id){var value=document.getElementById(id);if(value.value===\"\"){return document.getElementById(\"invalid\"+id).removeAttribute(\"hidden\");}else{return values[id]=value.value;}});if(Object.entries(values).length!==ids.length)return;var json={\"team\":{\"city\":values.inputCity,\"name\":values.inputName,\"abbreviation\":values.inputAbbreviation,\"officialLogoImageSrc\":values.inputImgSrc},\"stats\":{\"batting\":{\"atBats\":values.inputTAB,\"runs\":values.inputRuns,\"hits\":values.inputHits},\"pitching\":{\"earnedRunAvg\":values.inputARE,\"inningsPitched\":values.inputIPI,\"hitsAllowed\":values.inputAH},\"fielding\":{\"inningsPlayed\":values.inputIPL,\"totalChances\":values.inputTC,\"fielderTagOuts\":values.inputFTO},\"standings\":{\"wins\":values.inputWins,\"losses\":values.inputLosses,\"winPct\":values.inputWLP}}};console.log(json);postTeam(json);history.push('/');}// App.js\nfunction Form(props){var history=useHistory();return/*#__PURE__*/React.createElement(\"div\",{className:\"form\"},/*#__PURE__*/React.createElement(\"div\",{className:\"header\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"customContainer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"contentFilter\"}),/*#__PURE__*/React.createElement(\"form\",{className:\"space\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"formGroupExampleInput\",className:\"sectionLabel\"},\"Team Info\"),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputCity\"},\"City\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",id:\"inputCity\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputCity\",className:\"invalid-feedback\",hidden:true},\"Please choose a City.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputState\"},\"Name\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",id:\"inputName\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputName\",className:\"invalid-feedback\",hidden:true},\"Please choose a Name.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-2\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputZip\"},\"Abbreviation\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(e.target.value.length>2)e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputAbbreviation\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputAbbreviation\",className:\"invalid-feedback\",hidden:true},\"Please choose a Abbreviation.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-12\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",id:\"inputImgSrc\",placeholder:\"http://example.com\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputImgSrc\",className:\"invalid-feedback\",hidden:true},\"Please choose a Image Source.\"))),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"formGroupExampleInput\",className:\"sectionLabel\"},\"Standings\"),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputCity\"},\"Wins\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},onInput:function onInput(e){ChangeWins(e);},type:\"text\",className:\"form-control\",id:\"inputWins\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputWins\",className:\"invalid-feedback\",hidden:true},\"Please choose a Number of Wins.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputState\"},\"Losses\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},onInput:function onInput(e){ChangeLosses(e);},type:\"text\",className:\"form-control\",id:\"inputLosses\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputLosses\",className:\"invalid-feedback\",hidden:true},\"Please choose a Number of Losses.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputState\"},\"Win Loss Percentage\"),/*#__PURE__*/React.createElement(\"input\",{value:props.FormAvg,type:\"text\",className:\"form-control\",id:\"inputWLP\",readOnly:true}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputWLP\",className:\"invalid-feedback\",hidden:true},\"Please choose a Wins Loss Percentage.\"))),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"formGroupExampleInput\",className:\"sectionLabel\"},\"Batting\"),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputCity\"},\"Times at Bat\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputTAB\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputTAB\",className:\"invalid-feedback\",hidden:true},\"Please choose a Number of Times at Bat.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputState\"},\"Runs\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputRuns\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputRuns\",className:\"invalid-feedback\",hidden:true},\"Please choose a Number of Runs.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputZip\"},\"Hits\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputHits\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputHits\",className:\"invalid-feedback\",hidden:true},\"Please choose a Number of Hits.\"))),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"formGroupExampleInput\",className:\"sectionLabel\"},\"Pitching\"),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputCity\"},\"Average Runs Earned\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputARE\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputARE\",className:\"invalid-feedback\",hidden:true},\"Please choose a Number of Average Runs Earned.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputState\"},\"Innings Pitched\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputIPI\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputIPI\",className:\"invalid-feedback\",hidden:true},\"Please choose a Number of Innings Pitched.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputZip\"},\"Allowed Hits\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputAH\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputAH\",className:\"invalid-feedback\",hidden:true},\"Please choose a Number of Allowed Hits.\"))),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"formGroupExampleInput\",className:\"sectionLabel\"},\"Fieldings\"),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputCity\"},\"Innings Played\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputIPL\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputIPL\",className:\"invalid-feedback\",hidden:true},\"Please choose a Number of Innings Played.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputState\"},\"Total Chances\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputTC\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputTC\",className:\"invalid-feedback\",hidden:true},\"Please choose a Number of Total Chances.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputZip\"},\"Fielder Tag Outs\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputFTO\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputFTO\",className:\"invalid-feedback\",hidden:true},\"Please choose a Number of Fielder Tag Outs.\"))),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(e){ProcessForm(e,history);},type:\"sumbit\",className:\"btn btn-primary\"},\"Create Team\"))));}var mapStateToProps=function mapStateToProps(state){return{mlbStats:state.mlb_stats,CurrentList:state.CurrentList,CurrentSort:state.CurrentSort,FormAvg:state.FormAvg};};var mapDispatchToProps={};var FormContainer=connect(mapStateToProps,mapDispatchToProps)(Form);export default FormContainer;","map":{"version":3,"sources":["/Users/willweatherman/gs-accessing-mongodb-data-rest/ui/src/components/form.js"],"names":["React","connect","postTeam","store","useHistory","ChangeLosses","e","val","parseInt","target","value","isNaN","dispatch","type","text","ChangeWins","ProcessForm","history","preventDefault","ids","values","map","id","document","getElementById","removeAttribute","Object","entries","length","json","inputCity","inputName","inputAbbreviation","inputImgSrc","inputTAB","inputRuns","inputHits","inputARE","inputIPI","inputAH","inputIPL","inputTC","inputFTO","inputWins","inputLosses","inputWLP","console","log","push","Form","props","key","FormAvg","mapStateToProps","state","mlbStats","mlb_stats","CurrentList","CurrentSort","mapDispatchToProps","FormContainer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../stylesheets/form.css';\nimport '../stylesheets/bootstrap.css';\nimport { connect } from 'react-redux';\nimport { postTeam } from '../api.js';\nimport store from \"../store\";\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\n// function ChangeList(i) {\n//     // getTasks()\n//     store.dispatch({type: \"CHANGE_LIST\", text: i})\n// }\n\n// function ChangeRoute() {\n//     console.log(\"changeroute\")\n// }\n\nfunction ChangeLosses(e) {\n    let val = parseInt(e.target.value)\n    if (isNaN(val) || val < 0) val = 0\n    store.dispatch({type: \"UPDATE_LOSSES\", text: val})\n    store.dispatch({type: \"UPDATE_AVG\"})\n}\nfunction ChangeWins(e) {\n    let val = parseInt(e.target.value)\n    if (isNaN(val) || val < 0) val = 0\n    store.dispatch({type: \"UPDATE_WINS\", text: val})\n    store.dispatch({type: \"UPDATE_AVG\"})\n}\n\nfunction ProcessForm(e, history) {\n    e.preventDefault()\n    const ids = [\"inputCity\",\"inputName\",\"inputAbbreviation\",\"inputImgSrc\",\"inputTAB\",\"inputRuns\",\"inputHits\",\"inputARE\",\"inputIPI\",\"inputAH\",\"inputIPL\",\"inputTC\",\"inputFTO\",\"inputWins\",\"inputLosses\",\"inputWLP\"]\n    let values = {}\n    ids.map(id => {\n        const value = document.getElementById(id)\n        if (value.value === \"\") {\n            return document.getElementById(\"invalid\" + id).removeAttribute(\"hidden\")\n        } else {\n            return values[id] = value.value\n        }\n    })\n    if (Object.entries(values).length !== ids.length) return;\n        let json = {\n        \"team\": {\n            \"city\": values.inputCity,\n            \"name\": values.inputName,\n            \"abbreviation\": values.inputAbbreviation,\n            \"officialLogoImageSrc\": values.inputImgSrc\n        },\n        \"stats\": {\n            \"batting\": {\n                \"atBats\": values.inputTAB,\n                \"runs\": values.inputRuns,\n                \"hits\": values.inputHits\n            },\n            \"pitching\": {\n                \"earnedRunAvg\": values.inputARE,\n                \"inningsPitched\": values.inputIPI,\n                \"hitsAllowed\": values.inputAH\n            },\n            \"fielding\": {\n                \"inningsPlayed\": values.inputIPL,\n                \"totalChances\": values.inputTC,\n                \"fielderTagOuts\": values.inputFTO\n            },\n            \"standings\": {\n                \"wins\": values.inputWins,\n                \"losses\": values.inputLosses,\n                \"winPct\": values.inputWLP\n            }\n        }\n    }\n    console.log(json)\n    postTeam(json)\n    history.push('/')\n}\n\n\n\n\n// App.js\nfunction Form(props) {\n        let history = useHistory();\n        return (\n            <div className=\"form\">\n                <div className=\"header\">\n               </div>\n                <div className=\"customContainer\">\n                    <div className=\"contentFilter\">\n                    </div>\n                    <form className=\"space\">\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Team Info</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">City</label>\n                                <input type=\"text\" className=\"form-control\" id=\"inputCity\"/>\n                                <div id=\"invalidinputCity\" className=\"invalid-feedback\" hidden>\n                                    Please choose a City.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Name</label>\n                                <input type=\"text\" className=\"form-control\" id=\"inputName\"/>\n                                <div id=\"invalidinputName\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Name.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <label htmlFor=\"inputZip\">Abbreviation</label>\n                                <input onKeyPress={(e) => {\n                                    if (e.target.value.length > 2) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputAbbreviation\"/>\n                                <div id=\"invalidinputAbbreviation\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Abbreviation.\n                                </div>\n                            </div>\n                        </div>\n                        {/*<label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Image Source</label>*/}\n                        <div className=\"form-group row\">\n                            <div className=\"col-md-12\">\n                                <input type=\"text\" className=\"form-control\" id=\"inputImgSrc\"\n                                       placeholder=\"http://example.com\"/>\n                                <div id=\"invalidinputImgSrc\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Image Source.\n                                </div>\n                            </div>\n                        </div>\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Standings</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">Wins</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} onInput={(e) => {ChangeWins(e)}} type=\"text\" className=\"form-control\" id=\"inputWins\"/>\n                                <div id=\"invalidinputWins\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Wins.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Losses</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} onInput={(e) => {ChangeLosses(e)}} type=\"text\" className=\"form-control\" id=\"inputLosses\"/>\n                                <div id=\"invalidinputLosses\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Losses.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Win Loss Percentage</label>\n                                <input value={props.FormAvg} type=\"text\" className=\"form-control\" id=\"inputWLP\" readOnly/>\n                                <div id=\"invalidinputWLP\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Wins Loss Percentage.\n                                </div>\n                            </div>\n                        </div>\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Batting</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">Times at Bat</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputTAB\"/>\n                                <div id=\"invalidinputTAB\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Times at Bat.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Runs</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputRuns\"/>\n                                <div id=\"invalidinputRuns\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Runs.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputZip\">Hits</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputHits\"/>\n                                <div id=\"invalidinputHits\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Hits.\n                                </div>\n                            </div>\n                        </div>\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Pitching</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">Average Runs Earned</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputARE\"/>\n                                <div id=\"invalidinputARE\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Average Runs Earned.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Innings Pitched</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputIPI\"/>\n                                <div id=\"invalidinputIPI\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Innings Pitched.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputZip\">Allowed Hits</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputAH\"/>\n                                <div id=\"invalidinputAH\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Allowed Hits.\n                                </div>\n                            </div>\n                        </div>\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Fieldings</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">Innings Played</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputIPL\"/>\n                                <div id=\"invalidinputIPL\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Innings Played.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Total Chances</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputTC\"/>\n                                <div id=\"invalidinputTC\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Total Chances.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputZip\">Fielder Tag Outs</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputFTO\"/>\n                                <div id=\"invalidinputFTO\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Fielder Tag Outs.\n                                </div>\n                            </div>\n                        </div>\n                        <button onClick={(e) => {ProcessForm(e, history)}} type=\"sumbit\" className=\"btn btn-primary\">Create Team</button>\n                    </form>\n                </div>\n            </div>\n        );\n}\n\nconst mapStateToProps = state => ({\n    mlbStats: state.mlb_stats,\n    CurrentList: state.CurrentList,\n    CurrentSort: state.CurrentSort,\n    FormAvg: state.FormAvg\n});\n\nconst mapDispatchToProps = {\n};\n\nconst FormContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Form);\n\nexport default FormContainer;\n"]},"metadata":{},"sourceType":"module"}