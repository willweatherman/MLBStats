{"ast":null,"code":"import { deleteTeam } from \"./api\";\nexport function random() {\n  return Math.random();\n}\nexport function filterStats(stats, filterSection, filterBar, searchSection, searchBar, currentList, operator) {\n  console.log(stats);\n  if (stats === []) return stats;\n  filterBar = filterBar === '' || filterBar === '0' ? 0 : filterBar.toString().replace(/^0+/, '');\n  stats = stats.filter(team => {\n    const number = team.stats[currentList.toLowerCase()][filterSection];\n\n    if (operator === '>') {\n      return parseInt(number) > filterBar;\n    } else if (operator === '=') {\n      return parseInt(number) === filterBar;\n    } else {\n      return parseInt(number) < filterBar;\n    }\n  });\n  return stats.filter(team => {\n    const regex = new RegExp(searchBar, 'gi');\n    return team.team[searchSection.toLowerCase()].match(regex);\n  });\n}\nexport function sortStats(state, sortName, currentList) {\n  if (state === []) return state;\n  return state.sort((a, b) => {\n    if (sortName === \"city\" || sortName === \"name\" || sortName === \"abbreviation\" || sortName === \"officialLogoImageSrc\") return a.team[sortName].toLowerCase() >= b.team[sortName].toLowerCase() ? 1 : -1;\n    if (currentList === \"Standings\") return a.stats.standings[sortName] <= b.stats.standings[sortName] ? 1 : -1;\n    if (currentList === \"Batting\") return a.stats.batting[sortName] <= b.stats.batting[sortName] ? 1 : -1;\n    if (currentList === \"Pitching\") return a.stats.pitching[sortName] <= b.stats.pitching[sortName] ? 1 : -1;\n    if (currentList === \"Fielding\") return a.stats.fielding[sortName] <= b.stats.fielding[sortName] ? 1 : -1;\n    return 1;\n  });\n}\nexport function genFields(mlbStats, currSection) {\n  if (mlbStats == null) return {\n    \"stats\": [],\n    \"info\": []\n  };\n  let stats = [];\n  let info = [];\n  Object.entries(mlbStats[0].team).map(keyValue => {\n    return stats = stats.concat(keyValue[0]);\n  });\n  const currentlist = currSection.toLowerCase();\n  Object.entries(mlbStats[0].stats[currentlist]).map(keyValue => {\n    return stats = stats.concat(keyValue[0]);\n  });\n  mlbStats.map(team => {\n    let obj = {};\n    Object.entries(team.team).map(keyValue => {\n      return obj[keyValue[0]] = keyValue[1];\n    });\n    Object.entries(team.stats[currentlist]).map(keyValue => {\n      return obj[keyValue[0]] = keyValue[1];\n    });\n    return info = info.concat(obj);\n  });\n  return {\n    \"stats\": stats,\n    \"info\": info\n  };\n}\nexport async function removeTeam(e, TeamObj) {\n  await deleteTeam(TeamObj._links.self.href.replace(\"http://localhost:9000\", \"\"));\n  alert(\"Deleted Team \" + TeamObj.team.name);\n}","map":{"version":3,"sources":["/Users/willweatherman/gs-accessing-mongodb-data-rest/ui/src/utils.js"],"names":["deleteTeam","random","Math","filterStats","stats","filterSection","filterBar","searchSection","searchBar","currentList","operator","console","log","toString","replace","filter","team","number","toLowerCase","parseInt","regex","RegExp","match","sortStats","state","sortName","sort","a","b","standings","batting","pitching","fielding","genFields","mlbStats","currSection","info","Object","entries","map","keyValue","concat","currentlist","obj","removeTeam","e","TeamObj","_links","self","href","alert","name"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,OAAzB;AAEA,OAAO,SAASC,MAAT,GAAkB;AACrB,SAAOC,IAAI,CAACD,MAAL,EAAP;AACH;AAGD,OAAO,SAASE,WAAT,CAAqBC,KAArB,EAA4BC,aAA5B,EAA2CC,SAA3C,EAAsDC,aAAtD,EAAqEC,SAArE,EAAgFC,WAAhF,EAA6FC,QAA7F,EAAuG;AAC1GC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,MAAIA,KAAK,KAAK,EAAd,EAAkB,OAAOA,KAAP;AAClBE,EAAAA,SAAS,GAAIA,SAAS,KAAK,EAAd,IAAoBA,SAAS,KAAK,GAAnC,GAA0C,CAA1C,GAA8CA,SAAS,CAACO,QAAV,GAAqBC,OAArB,CAA6B,KAA7B,EAAoC,EAApC,CAA1D;AACAV,EAAAA,KAAK,GAAGA,KAAK,CAACW,MAAN,CAAaC,IAAI,IAAI;AACzB,UAAMC,MAAM,GAAGD,IAAI,CAACZ,KAAL,CAAWK,WAAW,CAACS,WAAZ,EAAX,EAAsCb,aAAtC,CAAf;;AACA,QAAIK,QAAQ,KAAK,GAAjB,EAAsB;AAClB,aAAQS,QAAQ,CAACF,MAAD,CAAR,GAAmBX,SAA3B;AACH,KAFD,MAEO,IAAII,QAAQ,KAAK,GAAjB,EAAsB;AACzB,aAAQS,QAAQ,CAACF,MAAD,CAAR,KAAqBX,SAA7B;AACH,KAFM,MAEA;AACH,aAAQa,QAAQ,CAACF,MAAD,CAAR,GAAmBX,SAA3B;AACH;AACJ,GATO,CAAR;AAUA,SAAOF,KAAK,CAACW,MAAN,CAAaC,IAAI,IAAI;AACxB,UAAMI,KAAK,GAAG,IAAIC,MAAJ,CAAWb,SAAX,EAAsB,IAAtB,CAAd;AACA,WAAOQ,IAAI,CAACA,IAAL,CAAUT,aAAa,CAACW,WAAd,EAAV,EAAuCI,KAAvC,CAA6CF,KAA7C,CAAP;AACH,GAHM,CAAP;AAIH;AAGD,OAAO,SAASG,SAAT,CAAmBC,KAAnB,EAA0BC,QAA1B,EAAoChB,WAApC,EAAiD;AACpD,MAAIe,KAAK,KAAK,EAAd,EAAkB,OAAOA,KAAP;AAClB,SAAOA,KAAK,CAACE,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,QAAIH,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,MAApC,IAA8CA,QAAQ,KAAK,cAA3D,IAA6EA,QAAQ,KAAK,sBAA9F,EAAsH,OAAQE,CAAC,CAACX,IAAF,CAAOS,QAAP,EAAiBP,WAAjB,MAAkCU,CAAC,CAACZ,IAAF,CAAOS,QAAP,EAAiBP,WAAjB,EAAnC,GAAqE,CAArE,GAAyE,CAAC,CAAjF;AACtH,QAAIT,WAAW,KAAK,WAApB,EAAiC,OAAQkB,CAAC,CAACvB,KAAF,CAAQyB,SAAR,CAAkBJ,QAAlB,KAA+BG,CAAC,CAACxB,KAAF,CAAQyB,SAAR,CAAkBJ,QAAlB,CAAhC,GAA+D,CAA/D,GAAmE,CAAC,CAA3E;AACjC,QAAIhB,WAAW,KAAK,SAApB,EAA+B,OAAQkB,CAAC,CAACvB,KAAF,CAAQ0B,OAAR,CAAgBL,QAAhB,KAA6BG,CAAC,CAACxB,KAAF,CAAQ0B,OAAR,CAAgBL,QAAhB,CAA9B,GAA2D,CAA3D,GAA+D,CAAC,CAAvE;AAC/B,QAAIhB,WAAW,KAAK,UAApB,EAAgC,OAAQkB,CAAC,CAACvB,KAAF,CAAQ2B,QAAR,CAAiBN,QAAjB,KAA8BG,CAAC,CAACxB,KAAF,CAAQ2B,QAAR,CAAiBN,QAAjB,CAA/B,GAA6D,CAA7D,GAAiE,CAAC,CAAzE;AAChC,QAAIhB,WAAW,KAAK,UAApB,EAAgC,OAAQkB,CAAC,CAACvB,KAAF,CAAQ4B,QAAR,CAAiBP,QAAjB,KAA8BG,CAAC,CAACxB,KAAF,CAAQ4B,QAAR,CAAiBP,QAAjB,CAA/B,GAA6D,CAA7D,GAAiE,CAAC,CAAzE;AAChC,WAAO,CAAP;AACH,GAPM,CAAP;AAQH;AAED,OAAO,SAASQ,SAAT,CAAmBC,QAAnB,EAA6BC,WAA7B,EAA0C;AAC7C,MAAID,QAAQ,IAAI,IAAhB,EAAsB,OAAO;AAAC,aAAS,EAAV;AAAc,YAAQ;AAAtB,GAAP;AACtB,MAAI9B,KAAK,GAAG,EAAZ;AACA,MAAIgC,IAAI,GAAG,EAAX;AACAC,EAAAA,MAAM,CAACC,OAAP,CAAeJ,QAAQ,CAAC,CAAD,CAAR,CAAYlB,IAA3B,EAAiCuB,GAAjC,CAAqCC,QAAQ,IAAI;AAC7C,WAAOpC,KAAK,GAAGA,KAAK,CAACqC,MAAN,CAAaD,QAAQ,CAAC,CAAD,CAArB,CAAf;AACH,GAFD;AAGA,QAAME,WAAW,GAAGP,WAAW,CAACjB,WAAZ,EAApB;AACAmB,EAAAA,MAAM,CAACC,OAAP,CAAeJ,QAAQ,CAAC,CAAD,CAAR,CAAY9B,KAAZ,CAAkBsC,WAAlB,CAAf,EAA+CH,GAA/C,CAAmDC,QAAQ,IAAI;AAC3D,WAAOpC,KAAK,GAAGA,KAAK,CAACqC,MAAN,CAAaD,QAAQ,CAAC,CAAD,CAArB,CAAf;AACH,GAFD;AAGAN,EAAAA,QAAQ,CAACK,GAAT,CAAavB,IAAI,IAAI;AACjB,QAAI2B,GAAG,GAAG,EAAV;AACAN,IAAAA,MAAM,CAACC,OAAP,CAAetB,IAAI,CAACA,IAApB,EAA0BuB,GAA1B,CAA8BC,QAAQ,IAAI;AACtC,aAAOG,GAAG,CAACH,QAAQ,CAAC,CAAD,CAAT,CAAH,GAAmBA,QAAQ,CAAC,CAAD,CAAlC;AACH,KAFD;AAGAH,IAAAA,MAAM,CAACC,OAAP,CAAetB,IAAI,CAACZ,KAAL,CAAWsC,WAAX,CAAf,EAAwCH,GAAxC,CAA4CC,QAAQ,IAAI;AACpD,aAAOG,GAAG,CAACH,QAAQ,CAAC,CAAD,CAAT,CAAH,GAAmBA,QAAQ,CAAC,CAAD,CAAlC;AACH,KAFD;AAGA,WAAOJ,IAAI,GAAGA,IAAI,CAACK,MAAL,CAAYE,GAAZ,CAAd;AACH,GATD;AAUA,SAAO;AAAC,aAASvC,KAAV;AAAiB,YAAQgC;AAAzB,GAAP;AACH;AAGD,OAAO,eAAeQ,UAAf,CAA0BC,CAA1B,EAA6BC,OAA7B,EAAsC;AACzC,QAAM9C,UAAU,CAAC8C,OAAO,CAACC,MAAR,CAAeC,IAAf,CAAoBC,IAApB,CAAyBnC,OAAzB,CAAiC,uBAAjC,EAA0D,EAA1D,CAAD,CAAhB;AACAoC,EAAAA,KAAK,CAAC,kBAAkBJ,OAAO,CAAC9B,IAAR,CAAamC,IAAhC,CAAL;AACH","sourcesContent":["import {deleteTeam} from \"./api\";\n\nexport function random() {\n    return Math.random();\n}\n\n\nexport function filterStats(stats, filterSection, filterBar, searchSection, searchBar, currentList, operator) {\n    console.log(stats)\n    if (stats === []) return stats;\n    filterBar = (filterBar === '' || filterBar === '0') ? 0 : filterBar.toString().replace(/^0+/, '');\n    stats = stats.filter(team => {\n        const number = team.stats[currentList.toLowerCase()][filterSection]\n        if (operator === '>') {\n            return (parseInt(number) > filterBar)\n        } else if (operator === '=') {\n            return (parseInt(number) === filterBar)\n        } else {\n            return (parseInt(number) < filterBar)\n        }\n    })\n    return stats.filter(team => {\n        const regex = new RegExp(searchBar, 'gi');\n        return team.team[searchSection.toLowerCase()].match(regex)\n    });\n}\n\n\nexport function sortStats(state, sortName, currentList) {\n    if (state === []) return state;\n    return state.sort((a, b) => {\n        if (sortName === \"city\" || sortName === \"name\" || sortName === \"abbreviation\" || sortName === \"officialLogoImageSrc\") return (a.team[sortName].toLowerCase() >= b.team[sortName].toLowerCase()) ? 1 : -1\n        if (currentList === \"Standings\") return (a.stats.standings[sortName] <= b.stats.standings[sortName]) ? 1 : -1\n        if (currentList === \"Batting\") return (a.stats.batting[sortName] <= b.stats.batting[sortName]) ? 1 : -1\n        if (currentList === \"Pitching\") return (a.stats.pitching[sortName] <= b.stats.pitching[sortName]) ? 1 : -1\n        if (currentList === \"Fielding\") return (a.stats.fielding[sortName] <= b.stats.fielding[sortName]) ? 1 : -1\n        return 1\n    })\n}\n\nexport function genFields(mlbStats, currSection) {\n    if (mlbStats == null) return {\"stats\": [], \"info\": []}\n    let stats = []\n    let info = []\n    Object.entries(mlbStats[0].team).map(keyValue => {\n        return stats = stats.concat(keyValue[0])\n    })\n    const currentlist = currSection.toLowerCase()\n    Object.entries(mlbStats[0].stats[currentlist]).map(keyValue => {\n        return stats = stats.concat(keyValue[0])\n    });\n    mlbStats.map(team => {\n        let obj = {};\n        Object.entries(team.team).map(keyValue => {\n            return obj[keyValue[0]] = keyValue[1]\n        });\n        Object.entries(team.stats[currentlist]).map(keyValue => {\n            return obj[keyValue[0]] = keyValue[1]\n        });\n        return info = info.concat(obj)\n    });\n    return {\"stats\": stats, \"info\": info}\n}\n\n\nexport async function removeTeam(e, TeamObj) {\n    await deleteTeam(TeamObj._links.self.href.replace(\"http://localhost:9000\", \"\"))\n    alert(\"Deleted Team \" + TeamObj.team.name)\n}"]},"metadata":{},"sourceType":"module"}