{"ast":null,"code":"import { createStore } from 'redux';\n\nfunction todos(state = {}, action) {\n  switch (action.type) {\n    case 'CLEAR_MLB_STATS':\n      return { ...state,\n        mlb_stats: []\n      };\n\n    case 'ADD_MLB_STATS':\n      return { ...state,\n        mlb_stats: state.mlb_stats.concat(action.state.mlb_stats)\n      };\n\n    case 'CHANGE_FILTER':\n      return { ...state,\n        filter_obj: action.filterObj\n      };\n\n    case 'CHANGE_SORT':\n      return { ...state,\n        sort_name: action.sortName\n      };\n\n    case 'CHANGE_LIST':\n      return { ...state,\n        CurrentList: action.text\n      };\n\n    case 'UPDATE_AVG':\n      if (state.FormWins === 0) return { ...state,\n        FormAvg: 0\n      };\n      return { ...state,\n        FormAvg: (state.FormWins / (state.FormWins + state.FormLosses)).toFixed(3)\n      };\n\n    case 'UPDATE_SEARCH_BAR':\n      return { ...state,\n        search_bar: action.text\n      };\n\n    case 'UPDATE_SEARCH_SECTION':\n      return { ...state,\n        search_section: action.text\n      };\n\n    case 'UPDATE_WINS':\n      return { ...state,\n        FormWins: action.text\n      };\n\n    case 'UPDATE_LOSSES':\n      return { ...state,\n        FormLosses: action.text\n      };\n\n    default:\n      return state;\n  }\n}\n\nlet store = createStore(todos, {\n  mlb_stats: [],\n  filter_obj: {},\n  search_bar: \"\",\n  search_section: \"City\",\n  sort_name: \"city\",\n  CurrentList: \"OverAll\",\n  FormAvg: 0,\n  FormWins: 0,\n  FormLosses: 0\n});\nexport default store;","map":{"version":3,"sources":["/Users/willweatherman/gs-accessing-mongodb-data-rest/ui/src/store.js"],"names":["createStore","todos","state","action","type","mlb_stats","concat","filter_obj","filterObj","sort_name","sortName","CurrentList","text","FormWins","FormAvg","FormLosses","toFixed","search_bar","search_section","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;;AAEA,SAASC,KAAT,CAAeC,KAAK,GAAG,EAAvB,EAA2BC,MAA3B,EAAmC;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,iBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHG,QAAAA,SAAS,EAAE;AAFR,OAAP;;AAIJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHG,QAAAA,SAAS,EAAEH,KAAK,CAACG,SAAN,CAAgBC,MAAhB,CAAuBH,MAAM,CAACD,KAAP,CAAaG,SAApC;AAFR,OAAP;;AAIJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHK,QAAAA,UAAU,EAAEJ,MAAM,CAACK;AAFhB,OAAP;;AAIJ,SAAK,aAAL;AACI,aAAO,EACH,GAAGN,KADA;AAEHO,QAAAA,SAAS,EAAEN,MAAM,CAACO;AAFf,OAAP;;AAIJ,SAAK,aAAL;AACI,aAAO,EACH,GAAGR,KADA;AAEHS,QAAAA,WAAW,EAAER,MAAM,CAACS;AAFjB,OAAP;;AAIJ,SAAK,YAAL;AACI,UAAIV,KAAK,CAACW,QAAN,KAAmB,CAAvB,EAA0B,OAAO,EAC7B,GAAGX,KAD0B;AAE7BY,QAAAA,OAAO,EAAE;AAFoB,OAAP;AAI1B,aAAO,EACH,GAAGZ,KADA;AAEHY,QAAAA,OAAO,EAAE,CAACZ,KAAK,CAACW,QAAN,IAAkBX,KAAK,CAACW,QAAN,GAAiBX,KAAK,CAACa,UAAzC,CAAD,EAAuDC,OAAvD,CAA+D,CAA/D;AAFN,OAAP;;AAIJ,SAAK,mBAAL;AACI,aAAO,EACH,GAAGd,KADA;AAEHe,QAAAA,UAAU,EAAEd,MAAM,CAACS;AAFhB,OAAP;;AAIJ,SAAK,uBAAL;AACI,aAAO,EACH,GAAGV,KADA;AAEHgB,QAAAA,cAAc,EAAEf,MAAM,CAACS;AAFpB,OAAP;;AAIJ,SAAK,aAAL;AACI,aAAO,EACH,GAAGV,KADA;AAEHW,QAAAA,QAAQ,EAAEV,MAAM,CAACS;AAFd,OAAP;;AAIJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGV,KADA;AAEHa,QAAAA,UAAU,EAAEZ,MAAM,CAACS;AAFhB,OAAP;;AAIJ;AACI,aAAOV,KAAP;AAxDR;AA0DH;;AACD,IAAIiB,KAAK,GAAGnB,WAAW,CAACC,KAAD,EAAQ;AAC3BI,EAAAA,SAAS,EAAE,EADgB;AAE3BE,EAAAA,UAAU,EAAE,EAFe;AAG3BU,EAAAA,UAAU,EAAE,EAHe;AAI3BC,EAAAA,cAAc,EAAE,MAJW;AAK3BT,EAAAA,SAAS,EAAE,MALgB;AAM3BE,EAAAA,WAAW,EAAE,SANc;AAO3BG,EAAAA,OAAO,EAAE,CAPkB;AAQ3BD,EAAAA,QAAQ,EAAE,CARiB;AAS3BE,EAAAA,UAAU,EAAE;AATe,CAAR,CAAvB;AAgBA,eAAeI,KAAf","sourcesContent":["import { createStore } from 'redux'\n\nfunction todos(state = {}, action) {\n    switch (action.type) {\n        case 'CLEAR_MLB_STATS':\n            return {\n                ...state,\n                mlb_stats: []\n            }\n        case 'ADD_MLB_STATS':\n            return {\n                ...state,\n                mlb_stats: state.mlb_stats.concat(action.state.mlb_stats),\n            }\n        case 'CHANGE_FILTER':\n            return {\n                ...state,\n                filter_obj: action.filterObj\n            }\n        case 'CHANGE_SORT':\n            return {\n                ...state,\n                sort_name: action.sortName\n            }\n        case 'CHANGE_LIST':\n            return {\n                ...state,\n                CurrentList: action.text\n            }\n        case 'UPDATE_AVG':\n            if (state.FormWins === 0) return {\n                ...state,\n                FormAvg: 0\n            }\n            return {\n                ...state,\n                FormAvg: (state.FormWins / (state.FormWins + state.FormLosses)).toFixed(3)\n            }\n        case 'UPDATE_SEARCH_BAR':\n            return {\n                ...state,\n                search_bar: action.text\n            }\n        case 'UPDATE_SEARCH_SECTION':\n            return {\n                ...state,\n                search_section: action.text\n            }\n        case 'UPDATE_WINS':\n            return {\n                ...state,\n                FormWins: action.text\n            }\n        case 'UPDATE_LOSSES':\n            return {\n                ...state,\n                FormLosses: action.text\n            }\n        default:\n            return state\n    }\n}\nlet store = createStore(todos, {\n    mlb_stats: [],\n    filter_obj: {},\n    search_bar: \"\",\n    search_section: \"City\",\n    sort_name: \"city\",\n    CurrentList: \"OverAll\",\n    FormAvg: 0,\n    FormWins: 0,\n    FormLosses: 0\n})\n\n\n\n\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}