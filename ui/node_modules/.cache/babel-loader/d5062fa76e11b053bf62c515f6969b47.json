{"ast":null,"code":"import { createStore } from 'redux';\n\nfunction todos(state = {}, action) {\n  switch (action.type) {\n    case 'UPDATE_STATE':\n      console.log(action.state);\n      state.ToDoList = action.state.ToDoList;\n      state.ToDoObject = action.state.ToDoObject;\n      state.CurrentList = action.state.CurrentList;\n      return state;\n\n    case 'CHANGE_LIST':\n      state.CurrentList = action.text;\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nlet store = createStore(todos, {\n  ToDoObject: {\n    \"ONE\": [\"HIYA\", \"HELLLOOOO\"],\n    \"TWO\": [\"BYEYA\", \"GOODBYEE\"]\n  },\n  ToDoList: [\"ONE\", \"TWO\"],\n  CurrentList: \"TWO\"\n}); // var getTasks = () => {\n//     fetch('/Tasks').then((response) => { return response.json(); }).then((data) => {\n//         console.log(data);\n//         let obj = {}\n//         let arr = []\n//         const Tasks = data._embedded.Tasks.map(task => {\n//             console.log(task)\n//             obj[task.name] = task.tasks\n//             arr = arr.concat(task.name)\n//             console.log(arr)\n//         })\n//         const newstate = {\n//             ToDoObject: obj,\n//             ToDoList: arr,\n//             CurrentList: arr[0]\n//         }\n//         console.log(newstate)\n//         store.dispatch({type: \"UPDATE_STATE\", state: newstate})\n//     });\n// }\n// getTasks()\n\nexport default store;","map":{"version":3,"sources":["/Users/willweatherman/gs-accessing-mongodb-data-rest/ui/src/store.js"],"names":["createStore","todos","state","action","type","console","log","ToDoList","ToDoObject","CurrentList","text","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;;AAEA,SAASC,KAAT,CAAeC,KAAK,GAAG,EAAvB,EAA2BC,MAA3B,EAAmC;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACD,KAAnB;AACAA,MAAAA,KAAK,CAACK,QAAN,GAAiBJ,MAAM,CAACD,KAAP,CAAaK,QAA9B;AACAL,MAAAA,KAAK,CAACM,UAAN,GAAmBL,MAAM,CAACD,KAAP,CAAaM,UAAhC;AACAN,MAAAA,KAAK,CAACO,WAAN,GAAoBN,MAAM,CAACD,KAAP,CAAaO,WAAjC;AACA,aAAOP,KAAP;;AACJ,SAAK,aAAL;AACIA,MAAAA,KAAK,CAACO,WAAN,GAAoBN,MAAM,CAACO,IAA3B;AACA,aAAOR,KAAP;;AACJ;AACI,aAAOA,KAAP;AAXR;AAaH;;AACD,IAAIS,KAAK,GAAGX,WAAW,CAACC,KAAD,EAAQ;AAC3BO,EAAAA,UAAU,EAAC;AACP,WAAO,CAAC,MAAD,EAAS,WAAT,CADA;AAEP,WAAO,CAAC,OAAD,EAAU,UAAV;AAFA,GADgB;AAK3BD,EAAAA,QAAQ,EAAC,CAAC,KAAD,EAAQ,KAAR,CALkB;AAM3BE,EAAAA,WAAW,EAAE;AANc,CAAR,CAAvB,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeE,KAAf","sourcesContent":["import { createStore } from 'redux'\n\nfunction todos(state = {}, action) {\n    switch (action.type) {\n        case 'UPDATE_STATE':\n            console.log(action.state)\n            state.ToDoList = action.state.ToDoList\n            state.ToDoObject = action.state.ToDoObject\n            state.CurrentList = action.state.CurrentList\n            return state\n        case 'CHANGE_LIST':\n            state.CurrentList = action.text\n            return state\n        default:\n            return state\n    }\n}\nlet store = createStore(todos, {\n    ToDoObject:{\n        \"ONE\": [\"HIYA\", \"HELLLOOOO\"],\n        \"TWO\": [\"BYEYA\", \"GOODBYEE\"]\n    },\n    ToDoList:[\"ONE\", \"TWO\"],\n    CurrentList: \"TWO\"\n})\n// var getTasks = () => {\n//     fetch('/Tasks').then((response) => { return response.json(); }).then((data) => {\n//         console.log(data);\n//         let obj = {}\n//         let arr = []\n//         const Tasks = data._embedded.Tasks.map(task => {\n//             console.log(task)\n//             obj[task.name] = task.tasks\n//             arr = arr.concat(task.name)\n//             console.log(arr)\n//         })\n//         const newstate = {\n//             ToDoObject: obj,\n//             ToDoList: arr,\n//             CurrentList: arr[0]\n//         }\n//         console.log(newstate)\n//         store.dispatch({type: \"UPDATE_STATE\", state: newstate})\n//     });\n// }\n// getTasks()\n\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}