{"ast":null,"code":"var _jsxFileName = \"/Users/willweatherman/gs-accessing-mongodb-data-rest/ui/src/components/form.js\";\nimport React from 'react';\nimport '../stylesheets/form.css';\nimport '../stylesheets/bootstrap.css';\nimport { connect } from 'react-redux';\nimport { postTeam } from '../api.js';\nimport store from \"../store\"; // function ChangeList(i) {\n//     // getTasks()\n//     store.dispatch({type: \"CHANGE_LIST\", text: i})\n// }\n\nfunction ChangeRoute() {\n  console.log(\"changeroute\");\n}\n\nfunction ChangeLosses(e) {\n  let val = parseInt(e.target.value);\n  if (isNaN(val) || val < 0) val = 0;\n  store.dispatch({\n    type: \"UPDATE_LOSSES\",\n    text: val\n  });\n  store.dispatch({\n    type: \"UPDATE_AVG\"\n  });\n}\n\nfunction ChangeWins(e) {\n  let val = parseInt(e.target.value);\n  if (isNaN(val) || val < 0) val = 0;\n  store.dispatch({\n    type: \"UPDATE_WINS\",\n    text: val\n  });\n  store.dispatch({\n    type: \"UPDATE_AVG\"\n  });\n}\n\nfunction ProcessForm(e) {\n  e.preventDefault();\n  const ids = [\"inputCity\", \"inputName\", \"inputAbbreviation\", \"inputImgSrc\", \"inputTAB\", \"inputRuns\", \"inputHits\", \"inputARE\", \"inputIPI\", \"inputAH\", \"inputIPL\", \"inputTC\", \"inputFTO\", \"inputWins\", \"inputLosses\", \"inputWLP\"];\n  let values = {};\n  ids.map(id => {\n    const value = document.getElementById(id);\n\n    if (value.value === \"\") {\n      return document.getElementById(\"invalid\" + id).removeAttribute(\"hidden\");\n    } else {\n      return values[id] = value.value;\n    }\n  });\n  if (Object.entries(values).length !== ids.length) return;\n  console.log(values);\n  let json = {\n    \"team\": {\n      \"city\": values.inputCity,\n      \"name\": values.inputName,\n      \"abbreviation\": values.inputAbbreviation,\n      \"officialLogoImageSrc\": values.inputImgSrc\n    },\n    \"stats\": {\n      \"batting\": {\n        \"atBats\": values.inputTAB,\n        \"runs\": values.inputRuns,\n        \"hits\": values.inputHits\n      },\n      \"pitching\": {\n        \"earnedRunAvg\": values.inputARE,\n        \"inningsPitched\": values.inputIPI,\n        \"hitsAllowed\": values.inputAH\n      },\n      \"fielding\": {\n        \"inningsPlayed\": values.inputIPL,\n        \"totalChances\": values.inputTC,\n        \"fielderTagOuts\": values.inputFTO\n      },\n      \"standings\": {\n        \"wins\": values.inputWins,\n        \"losses\": values.inputLosses,\n        \"winPct\": values.inputWLP\n      }\n    }\n  };\n  console.log(json);\n  postTeam(JSON.stringify(json));\n} // App.js\n\n\nfunction Form(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contentFilter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"formGroupExampleInput\",\n    className: \"sectionLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \"Team Info\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputCity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputCity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"invalidinputCity\",\n    className: \"invalid-feedback\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, \"Please choose a City.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputState\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"invalidinputName\",\n    className: \"invalid-feedback\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, \"Please choose a Name.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputZip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }, \"Abbreviation\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (e.target.value.length > 2) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputAbbreviation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"invalidinputAbbreviation\",\n    className: \"invalid-feedback\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, \"Please choose a Abbreviation.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputImgSrc\",\n    placeholder: \"http://example.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"invalidinputImgSrc\",\n    className: \"invalid-feedback\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 33\n    }\n  }, \"Please choose a Image Source.\"))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"formGroupExampleInput\",\n    className: \"sectionLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, \"Standings\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputCity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, \"Wins\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    onInput: e => {\n      ChangeWins(e);\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputWins\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"invalidinputWins\",\n    className: \"invalid-feedback\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, \"Please choose a Number of Wins.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputState\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 33\n    }\n  }, \"Losses\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    onInput: e => {\n      ChangeLosses(e);\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputLosses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"invalidinputLosses\",\n    className: \"invalid-feedback\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  }, \"Please choose a Number of Losses.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputState\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 33\n    }\n  }, \"Win Loss Percentage\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: props.FormAvg,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputWLP\",\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"invalidinputWLP\",\n    className: \"invalid-feedback\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 33\n    }\n  }, \"Please choose a Wins Loss Percentage.\"))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"formGroupExampleInput\",\n    className: \"sectionLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, \"Batting\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputCity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 33\n    }\n  }, \"Times at Bat\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputTAB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"invalidinputTAB\",\n    className: \"invalid-feedback\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 33\n    }\n  }, \"Please choose a Number of Times at Bat.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputState\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 33\n    }\n  }, \"Runs\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputRuns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"invalidinputRuns\",\n    className: \"invalid-feedback\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 33\n    }\n  }, \"Please choose a Number of Runs.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputZip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 33\n    }\n  }, \"Hits\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputHits\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"invalidinputHits\",\n    className: \"invalid-feedback\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  }, \"Please choose a Number of Hits.\"))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"formGroupExampleInput\",\n    className: \"sectionLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, \"Pitching\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputCity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, \"Average Runs Earned\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputARE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"invalidinputARE\",\n    className: \"invalid-feedback\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 33\n    }\n  }, \"Please choose a Number of Average Runs Earned.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputState\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 33\n    }\n  }, \"Innings Pitched\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputIPI\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"invalidinputIPI\",\n    className: \"invalid-feedback\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 33\n    }\n  }, \"Please choose a Number of Innings Pitched.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputZip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }\n  }, \"Allowed Hits\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputAH\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"invalidinputAH\",\n    className: \"invalid-feedback\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 33\n    }\n  }, \"Please choose a Number of Allowed Hits.\"))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"formGroupExampleInput\",\n    className: \"sectionLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  }, \"Fieldings\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputCity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 33\n    }\n  }, \"Innings Played\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputIPL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"invalidinputIPL\",\n    className: \"invalid-feedback\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 33\n    }\n  }, \"Please choose a Number of Innings Played.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputState\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 33\n    }\n  }, \"Total Chances\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputTC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"invalidinputTC\",\n    className: \"invalid-feedback\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 33\n    }\n  }, \"Please choose a Number of Total Chances.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputZip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 33\n    }\n  }, \"Fielder Tag Outs\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputFTO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"invalidinputFTO\",\n    className: \"invalid-feedback\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 33\n    }\n  }, \"Please choose a Number of Fielder Tag Outs.\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      ProcessForm(e);\n    },\n    type: \"sumbit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 25\n    }\n  }, \"Create Team\"))));\n}\n\nconst mapStateToProps = state => ({\n  mlbStats: state.mlb_stats,\n  CurrentList: state.CurrentList,\n  CurrentSort: state.CurrentSort,\n  FormAvg: state.FormAvg\n});\n\nconst mapDispatchToProps = {};\nconst FormContainer = connect(mapStateToProps, mapDispatchToProps)(Form);\nexport default FormContainer;","map":{"version":3,"sources":["/Users/willweatherman/gs-accessing-mongodb-data-rest/ui/src/components/form.js"],"names":["React","connect","postTeam","store","ChangeRoute","console","log","ChangeLosses","e","val","parseInt","target","value","isNaN","dispatch","type","text","ChangeWins","ProcessForm","preventDefault","ids","values","map","id","document","getElementById","removeAttribute","Object","entries","length","json","inputCity","inputName","inputAbbreviation","inputImgSrc","inputTAB","inputRuns","inputHits","inputARE","inputIPI","inputAH","inputIPL","inputTC","inputFTO","inputWins","inputLosses","inputWLP","JSON","stringify","Form","props","key","FormAvg","mapStateToProps","state","mlbStats","mlb_stats","CurrentList","CurrentSort","mapDispatchToProps","FormContainer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../stylesheets/form.css';\nimport '../stylesheets/bootstrap.css';\nimport { connect } from 'react-redux';\nimport { postTeam } from '../api.js';\nimport store from \"../store\";\n\n\n\n// function ChangeList(i) {\n//     // getTasks()\n//     store.dispatch({type: \"CHANGE_LIST\", text: i})\n// }\n\nfunction ChangeRoute() {\n    console.log(\"changeroute\")\n}\n\nfunction ChangeLosses(e) {\n    let val = parseInt(e.target.value)\n    if (isNaN(val) || val < 0) val = 0\n    store.dispatch({type: \"UPDATE_LOSSES\", text: val})\n    store.dispatch({type: \"UPDATE_AVG\"})\n}\nfunction ChangeWins(e) {\n    let val = parseInt(e.target.value)\n    if (isNaN(val) || val < 0) val = 0\n    store.dispatch({type: \"UPDATE_WINS\", text: val})\n    store.dispatch({type: \"UPDATE_AVG\"})\n}\n\nfunction ProcessForm(e) {\n    e.preventDefault()\n    const ids = [\"inputCity\",\"inputName\",\"inputAbbreviation\",\"inputImgSrc\",\"inputTAB\",\"inputRuns\",\"inputHits\",\"inputARE\",\"inputIPI\",\"inputAH\",\"inputIPL\",\"inputTC\",\"inputFTO\",\"inputWins\",\"inputLosses\",\"inputWLP\"]\n    let values = {}\n    ids.map(id => {\n        const value = document.getElementById(id)\n        if (value.value === \"\") {\n            return document.getElementById(\"invalid\" + id).removeAttribute(\"hidden\")\n        } else {\n            return values[id] = value.value\n        }\n    })\n    if (Object.entries(values).length !== ids.length) return;\n        console.log(values)\n        let json = {\n        \"team\": {\n            \"city\": values.inputCity,\n            \"name\": values.inputName,\n            \"abbreviation\": values.inputAbbreviation,\n            \"officialLogoImageSrc\": values.inputImgSrc\n        },\n        \"stats\": {\n            \"batting\": {\n                \"atBats\": values.inputTAB,\n                \"runs\": values.inputRuns,\n                \"hits\": values.inputHits\n            },\n            \"pitching\": {\n                \"earnedRunAvg\": values.inputARE,\n                \"inningsPitched\": values.inputIPI,\n                \"hitsAllowed\": values.inputAH\n            },\n            \"fielding\": {\n                \"inningsPlayed\": values.inputIPL,\n                \"totalChances\": values.inputTC,\n                \"fielderTagOuts\": values.inputFTO\n            },\n            \"standings\": {\n                \"wins\": values.inputWins,\n                \"losses\": values.inputLosses,\n                \"winPct\": values.inputWLP\n            }\n        }\n    }\n    console.log(json)\n    postTeam(JSON.stringify(json))\n}\n\n\n\n\n// App.js\nfunction Form(props) {\n        return (\n            <div className=\"form\">\n                <div className=\"header\">\n               </div>\n                <div className=\"customContainer\">\n                    <div className=\"contentFilter\">\n                    </div>\n                    <form className=\"space\">\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Team Info</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">City</label>\n                                <input type=\"text\" className=\"form-control\" id=\"inputCity\"/>\n                                <div id=\"invalidinputCity\" className=\"invalid-feedback\" hidden>\n                                    Please choose a City.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Name</label>\n                                <input type=\"text\" className=\"form-control\" id=\"inputName\"/>\n                                <div id=\"invalidinputName\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Name.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <label htmlFor=\"inputZip\">Abbreviation</label>\n                                <input onKeyPress={(e) => {\n                                    if (e.target.value.length > 2) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputAbbreviation\"/>\n                                <div id=\"invalidinputAbbreviation\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Abbreviation.\n                                </div>\n                            </div>\n                        </div>\n                        {/*<label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Image Source</label>*/}\n                        <div className=\"form-group row\">\n                            <div className=\"col-md-12\">\n                                <input type=\"text\" className=\"form-control\" id=\"inputImgSrc\"\n                                       placeholder=\"http://example.com\"/>\n                                <div id=\"invalidinputImgSrc\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Image Source.\n                                </div>\n                            </div>\n                        </div>\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Standings</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">Wins</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} onInput={(e) => {ChangeWins(e)}} type=\"text\" className=\"form-control\" id=\"inputWins\"/>\n                                <div id=\"invalidinputWins\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Wins.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Losses</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} onInput={(e) => {ChangeLosses(e)}} type=\"text\" className=\"form-control\" id=\"inputLosses\"/>\n                                <div id=\"invalidinputLosses\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Losses.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Win Loss Percentage</label>\n                                <input value={props.FormAvg} type=\"text\" className=\"form-control\" id=\"inputWLP\" readOnly/>\n                                <div id=\"invalidinputWLP\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Wins Loss Percentage.\n                                </div>\n                            </div>\n                        </div>\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Batting</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">Times at Bat</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputTAB\"/>\n                                <div id=\"invalidinputTAB\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Times at Bat.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Runs</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputRuns\"/>\n                                <div id=\"invalidinputRuns\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Runs.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputZip\">Hits</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputHits\"/>\n                                <div id=\"invalidinputHits\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Hits.\n                                </div>\n                            </div>\n                        </div>\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Pitching</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">Average Runs Earned</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputARE\"/>\n                                <div id=\"invalidinputARE\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Average Runs Earned.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Innings Pitched</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputIPI\"/>\n                                <div id=\"invalidinputIPI\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Innings Pitched.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputZip\">Allowed Hits</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputAH\"/>\n                                <div id=\"invalidinputAH\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Allowed Hits.\n                                </div>\n                            </div>\n                        </div>\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Fieldings</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">Innings Played</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputIPL\"/>\n                                <div id=\"invalidinputIPL\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Innings Played.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Total Chances</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputTC\"/>\n                                <div id=\"invalidinputTC\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Total Chances.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputZip\">Fielder Tag Outs</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputFTO\"/>\n                                <div id=\"invalidinputFTO\" className=\"invalid-feedback\" hidden>\n                                    Please choose a Number of Fielder Tag Outs.\n                                </div>\n                            </div>\n                        </div>\n                        <button onClick={(e) => {ProcessForm(e)}} type=\"sumbit\" className=\"btn btn-primary\">Create Team</button>\n                    </form>\n                </div>\n            </div>\n        );\n}\n\nconst mapStateToProps = state => ({\n    mlbStats: state.mlb_stats,\n    CurrentList: state.CurrentList,\n    CurrentSort: state.CurrentSort,\n    FormAvg: state.FormAvg\n});\n\nconst mapDispatchToProps = {\n};\n\nconst FormContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Form);\n\nexport default FormContainer;\n"]},"metadata":{},"sourceType":"module"}