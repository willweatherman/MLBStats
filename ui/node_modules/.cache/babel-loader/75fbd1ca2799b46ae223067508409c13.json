{"ast":null,"code":"import _regeneratorRuntime from\"/Users/willweatherman/gs-accessing-mongodb-data-rest/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/willweatherman/gs-accessing-mongodb-data-rest/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{deleteTeam}from\"./api\";export function random(){return Math.random();}export function filterStats(stats,filterSection,filterBar,searchSection,searchBar,currentList,operator){if(stats===[])return stats;filterBar=filterBar===''||filterBar==='0'?0:filterBar.toString().replace(/^0+/,'');stats=stats.filter(function(team){var number=team.stats[currentList.toLowerCase()][filterSection];if(operator==='>'){return parseInt(number)>filterBar;}else if(operator==='='){return parseInt(number)===filterBar;}else{return parseInt(number)<filterBar;}});return stats.filter(function(team){var regex=new RegExp(searchBar,'gi');return team.team[searchSection.toLowerCase()].match(regex);});}export function sortStats(state,sortName,currentList){if(state===[])return state;return state.sort(function(a,b){if(sortName===\"city\"||sortName===\"name\"||sortName===\"abbreviation\"||sortName===\"officialLogoImageSrc\")return a.team[sortName].toLowerCase()>=b.team[sortName].toLowerCase()?1:-1;if(currentList===\"Standings\")return a.stats.standings[sortName]<=b.stats.standings[sortName]?1:-1;if(currentList===\"Batting\")return a.stats.batting[sortName]<=b.stats.batting[sortName]?1:-1;if(currentList===\"Pitching\")return a.stats.pitching[sortName]<=b.stats.pitching[sortName]?1:-1;if(currentList===\"Fielding\")return a.stats.fielding[sortName]<=b.stats.fielding[sortName]?1:-1;return 1;});}export function genFields(mlbStats,currSection){if(mlbStats==null)return{\"stats\":[],\"info\":[]};var stats=[];var info=[];Object.entries(mlbStats[0].team).map(function(keyValue){return stats=stats.concat(keyValue[0]);});var currentlist=currSection.toLowerCase();Object.entries(mlbStats[0].stats[currentlist]).map(function(keyValue){return stats=stats.concat(keyValue[0]);});mlbStats.map(function(team){var obj={};Object.entries(team.team).map(function(keyValue){return obj[keyValue[0]]=keyValue[1];});Object.entries(team.stats[currentlist]).map(function(keyValue){return obj[keyValue[0]]=keyValue[1];});return info=info.concat(obj);});return{\"stats\":stats,\"info\":info};}export function removeTeam(_x,_x2){return _removeTeam.apply(this,arguments);}function _removeTeam(){_removeTeam=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e,TeamObj){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return deleteTeam(TeamObj._links.self.href.replace(\"http://localhost:9000\",\"\"));case 2:alert(\"Deleted Team \"+TeamObj.team.name);case 3:case\"end\":return _context.stop();}}},_callee);}));return _removeTeam.apply(this,arguments);}","map":{"version":3,"sources":["/Users/willweatherman/gs-accessing-mongodb-data-rest/ui/src/utils.js"],"names":["deleteTeam","random","Math","filterStats","stats","filterSection","filterBar","searchSection","searchBar","currentList","operator","toString","replace","filter","team","number","toLowerCase","parseInt","regex","RegExp","match","sortStats","state","sortName","sort","a","b","standings","batting","pitching","fielding","genFields","mlbStats","currSection","info","Object","entries","map","keyValue","concat","currentlist","obj","removeTeam","e","TeamObj","_links","self","href","alert","name"],"mappings":"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","sourcesContent":["import {deleteTeam} from \"./api\";\n\nexport function random() {\n    return Math.random();\n}\n\n\nexport function filterStats(stats, filterSection, filterBar, searchSection, searchBar, currentList, operator) {\n    if (stats === []) return stats;\n    filterBar = (filterBar === '' || filterBar === '0') ? 0 : filterBar.toString().replace(/^0+/, '');\n    stats = stats.filter(team => {\n        const number = team.stats[currentList.toLowerCase()][filterSection]\n        if (operator === '>') {\n            return (parseInt(number) > filterBar)\n        } else if (operator === '=') {\n            return (parseInt(number) === filterBar)\n        } else {\n            return (parseInt(number) < filterBar)\n        }\n    })\n    return stats.filter(team => {\n        const regex = new RegExp(searchBar, 'gi');\n        return team.team[searchSection.toLowerCase()].match(regex)\n    });\n}\n\n\nexport function sortStats(state, sortName, currentList) {\n    if (state === []) return state;\n    return state.sort((a, b) => {\n        if (sortName === \"city\" || sortName === \"name\" || sortName === \"abbreviation\" || sortName === \"officialLogoImageSrc\") return (a.team[sortName].toLowerCase() >= b.team[sortName].toLowerCase()) ? 1 : -1\n        if (currentList === \"Standings\") return (a.stats.standings[sortName] <= b.stats.standings[sortName]) ? 1 : -1\n        if (currentList === \"Batting\") return (a.stats.batting[sortName] <= b.stats.batting[sortName]) ? 1 : -1\n        if (currentList === \"Pitching\") return (a.stats.pitching[sortName] <= b.stats.pitching[sortName]) ? 1 : -1\n        if (currentList === \"Fielding\") return (a.stats.fielding[sortName] <= b.stats.fielding[sortName]) ? 1 : -1\n        return 1\n    })\n}\n\nexport function genFields(mlbStats, currSection) {\n    if (mlbStats == null) return {\"stats\": [], \"info\": []}\n    let stats = []\n    let info = []\n    Object.entries(mlbStats[0].team).map(keyValue => {\n        return stats = stats.concat(keyValue[0])\n    })\n    const currentlist = currSection.toLowerCase()\n    Object.entries(mlbStats[0].stats[currentlist]).map(keyValue => {\n        return stats = stats.concat(keyValue[0])\n    });\n    mlbStats.map(team => {\n        let obj = {};\n        Object.entries(team.team).map(keyValue => {\n            return obj[keyValue[0]] = keyValue[1]\n        });\n        Object.entries(team.stats[currentlist]).map(keyValue => {\n            return obj[keyValue[0]] = keyValue[1]\n        });\n        return info = info.concat(obj)\n    });\n    return {\"stats\": stats, \"info\": info}\n}\n\n\nexport async function removeTeam(e, TeamObj) {\n    await deleteTeam(TeamObj._links.self.href.replace(\"http://localhost:9000\", \"\"))\n    alert(\"Deleted Team \" + TeamObj.team.name)\n}"]},"metadata":{},"sourceType":"module"}