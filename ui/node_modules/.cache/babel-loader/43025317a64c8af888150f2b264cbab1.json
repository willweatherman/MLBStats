{"ast":null,"code":"export function genFields(mlbStats, currSection) {\n  if (mlbStats == null) return {\n    \"stats\": [],\n    \"info\": []\n  };\n  let stats = [];\n  let info = [];\n  Object.entries(mlbStats[0].stats.standings).map(keyValue => {\n    stats = stats.concat(keyValue[0]);\n  });\n  mlbStats.map(team => {\n    let obj = {}; // Object.entries(team.team).map(keyValue => {\n    //     obj[keyValue[0]] = keyValue[1]\n    // })\n\n    Object.entries(stats.standings).map(keyValue => {\n      obj[keyValue[0]] = keyValue[1];\n    });\n    console.log(obj);\n    info = info.concat(obj);\n  });\n\n  switch (currSection) {\n    case \"OverAll\":\n      {}\n  }\n\n  console.log(stats);\n  return {\n    \"stats\": stats,\n    \"info\": info\n  };\n}","map":{"version":3,"sources":["/Users/willweatherman/gs-accessing-mongodb-data-rest/ui/src/services/index.js"],"names":["genFields","mlbStats","currSection","stats","info","Object","entries","standings","map","keyValue","concat","team","obj","console","log"],"mappings":"AAAA,OAAO,SAASA,SAAT,CAAmBC,QAAnB,EAA6BC,WAA7B,EAA0C;AAC7C,MAAID,QAAQ,IAAI,IAAhB,EAAsB,OAAO;AAAC,aAAS,EAAV;AAAc,YAAQ;AAAtB,GAAP;AACtB,MAAIE,KAAK,GAAG,EAAZ;AACA,MAAIC,IAAI,GAAG,EAAX;AAEAC,EAAAA,MAAM,CAACC,OAAP,CAAeL,QAAQ,CAAC,CAAD,CAAR,CAAYE,KAAZ,CAAkBI,SAAjC,EAA4CC,GAA5C,CAAgDC,QAAQ,IAAI;AACxDN,IAAAA,KAAK,GAAGA,KAAK,CAACO,MAAN,CAAaD,QAAQ,CAAC,CAAD,CAArB,CAAR;AACH,GAFD;AAGAR,EAAAA,QAAQ,CAACO,GAAT,CAAaG,IAAI,IAAI;AACjB,QAAIC,GAAG,GAAG,EAAV,CADiB,CAEjB;AACA;AACA;;AACAP,IAAAA,MAAM,CAACC,OAAP,CAAeH,KAAK,CAACI,SAArB,EAAgCC,GAAhC,CAAoCC,QAAQ,IAAI;AAC5CG,MAAAA,GAAG,CAACH,QAAQ,CAAC,CAAD,CAAT,CAAH,GAAmBA,QAAQ,CAAC,CAAD,CAA3B;AACH,KAFD;AAGAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAR,IAAAA,IAAI,GAAGA,IAAI,CAACM,MAAL,CAAYE,GAAZ,CAAP;AACH,GAVD;;AAYA,UAAQV,WAAR;AACI,SAAK,SAAL;AAAgB,OAEf;AAHL;;AAMAW,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AAEA,SAAO;AAAC,aAASA,KAAV;AAAiB,YAAQC;AAAzB,GAAP;AACH","sourcesContent":["export function genFields(mlbStats, currSection) {\n    if (mlbStats == null) return {\"stats\": [], \"info\": []}\n    let stats = []\n    let info = []\n\n    Object.entries(mlbStats[0].stats.standings).map(keyValue => {\n        stats = stats.concat(keyValue[0])\n    })\n    mlbStats.map(team => {\n        let obj = {}\n        // Object.entries(team.team).map(keyValue => {\n        //     obj[keyValue[0]] = keyValue[1]\n        // })\n        Object.entries(stats.standings).map(keyValue => {\n            obj[keyValue[0]] = keyValue[1]\n        })\n        console.log(obj)\n        info = info.concat(obj)\n    })\n\n    switch (currSection) {\n        case \"OverAll\": {\n\n        }\n    }\n\n    console.log(stats)\n\n    return {\"stats\": stats, \"info\": info}\n}\n\n"]},"metadata":{},"sourceType":"module"}