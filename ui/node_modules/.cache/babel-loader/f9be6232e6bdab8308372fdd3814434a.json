{"ast":null,"code":"import React from'react';import'../stylesheets/form.css';import'../stylesheets/bootstrap.css';import{connect}from'react-redux';import{postTeam}from'../api.js';import{useHistory}from\"react-router-dom\";// function changeLosses(e) {\n//     let val = parseInt(e.target.value)\n//     if (isNaN(val) || val < 0) val = 0\n//     store.dispatch({type: \"UPDATE_LOSSES\", text: val})\n//     store.dispatch({type: \"UPDATE_AVG\"})\n// }\n// function changeWins(e) {\n//     let val = parseInt(e.target.value)\n//     if (isNaN(val) || val < 0) val = 0\n//     store.dispatch({type: \"UPDATE_WINS\", text: val})\n//     store.dispatch({type: \"UPDATE_AVG\"})\n// }\nfunction processForm(e,history){e.preventDefault();var ids=[\"inputCity\",\"inputName\",\"inputAbbreviation\",\"inputImgSrc\",\"inputTAB\",\"inputRuns\",\"inputHits\",\"inputARE\",\"inputIPI\",\"inputAH\",\"inputIPL\",\"inputTC\",\"inputFTO\"];var values={};ids.map(function(id){var value=document.getElementById(id);if(value.value===\"\"){return document.getElementById(\"invalid\"+id).classList.remove(\"hidden\");}else{return values[id]=value.value;}});if(Object.entries(values).length!==ids.length)return;var json={\"team\":{\"city\":values.inputCity,\"name\":values.inputName,\"abbreviation\":values.inputAbbreviation,\"officialLogoImageSrc\":values.inputImgSrc},\"stats\":{\"batting\":{\"atBats\":values.inputTAB,\"runs\":values.inputRuns,\"hits\":values.inputHits},\"pitching\":{\"earnedRunAvg\":values.inputARE,\"inningsPitched\":values.inputIPI,\"hitsAllowed\":values.inputAH},\"fielding\":{\"inningsPlayed\":values.inputIPL,\"totalChances\":values.inputTC,\"fielderTagOuts\":values.inputFTO},\"standings\":{\"wins\":1,\"losses\":1,\"winPct\":0.5}}};postTeam(json);history.push('/');}// App.js\nfunction Form(props){var history=useHistory();return/*#__PURE__*/React.createElement(\"div\",{className:\"form\"},/*#__PURE__*/React.createElement(\"div\",{className:\"header\"}),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){history.push('/');},className:\"formButton\"},\"Back\"),/*#__PURE__*/React.createElement(\"div\",{className:\"customContainer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"contentFilter\"}),/*#__PURE__*/React.createElement(\"form\",{className:\"space\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"formGroupExampleInput\",className:\"sectionLabel\"},\"Team Info\"),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputCity\"},\"City\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",id:\"inputCity\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputCity\",className:\"invalid-feedback hidden\"},\"Please choose a City.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputState\"},\"Name\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",id:\"inputName\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputName\",className:\"invalid-feedback hidden\"},\"Please choose a Name.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-2\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputZip\"},\"Abbreviation\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(e.target.value.length>2)e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputAbbreviation\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputAbbreviation\",className:\"invalid-feedback hidden\"},\"Please choose a Abbreviation.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group row\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputPassword\",className:\"col-sm-2 col-form-label\"},\"Image Source\"),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-12\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",id:\"inputImgSrc\",placeholder:\"http://example.com\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputImgSrc\",className:\"invalid-feedback hidden\"},\"Please choose a Image Source.\"))),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"formGroupExampleInput\",className:\"sectionLabel\"},\"Batting\"),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputCity\"},\"Times at Bat\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputTAB\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputTAB\",className:\"invalid-feedback hidden\"},\"Please choose a Number of Times at Bat.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputState\"},\"Runs\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputRuns\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputRuns\",className:\"invalid-feedback hidden\"},\"Please choose a Number of Runs.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputZip\"},\"Hits\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputHits\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputHits\",className:\"invalid-feedback hidden\"},\"Please choose a Number of Hits.\"))),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"formGroupExampleInput\",className:\"sectionLabel\"},\"Pitching\"),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputCity\"},\"Average Runs Earned\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputARE\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputARE\",className:\"invalid-feedback hidden\"},\"Please choose a Number of Average Runs Earned.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputState\"},\"Innings Pitched\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputIPI\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputIPI\",className:\"invalid-feedback hidden\"},\"Please choose a Number of Innings Pitched.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputZip\"},\"Allowed Hits\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputAH\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputAH\",className:\"invalid-feedback hidden\"},\"Please choose a Number of Allowed Hits.\"))),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"formGroupExampleInput\",className:\"sectionLabel\"},\"Fieldings\"),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputCity\"},\"Innings Played\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputIPL\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputIPL\",className:\"invalid-feedback hidden\"},\"Please choose a Number of Innings Played.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputState\"},\"Total Chances\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputTC\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputTC\",className:\"invalid-feedback hidden\"},\"Please choose a Number of Total Chances.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-4\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"inputZip\"},\"Fielder Tag Outs\"),/*#__PURE__*/React.createElement(\"input\",{onKeyPress:function onKeyPress(e){if(isNaN(e.key))e.preventDefault();},type:\"text\",className:\"form-control\",id:\"inputFTO\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"invalidinputFTO\",className:\"invalid-feedback hidden\"},\"Please choose a Number of Fielder Tag Outs.\"))),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(e){processForm(e,history);},type:\"sumbit\",className:\"btn btn-primary\"},\"Create Team\"))));}var mapStateToProps=function mapStateToProps(state){return{mlbStats:state.mlb_stats,CurrentList:state.current_list,FormAvg:state.form_avg};};var mapDispatchToProps={};var FormContainer=connect(mapStateToProps,mapDispatchToProps)(Form);export default FormContainer;","map":{"version":3,"sources":["/Users/willweatherman/gs-accessing-mongodb-data-rest/ui/src/components/Form.jsx"],"names":["React","connect","postTeam","useHistory","processForm","e","history","preventDefault","ids","values","map","id","value","document","getElementById","classList","remove","Object","entries","length","json","inputCity","inputName","inputAbbreviation","inputImgSrc","inputTAB","inputRuns","inputHits","inputARE","inputIPI","inputAH","inputIPL","inputTC","inputFTO","push","Form","props","target","isNaN","key","mapStateToProps","state","mlbStats","mlb_stats","CurrentList","current_list","FormAvg","form_avg","mapDispatchToProps","FormContainer"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,yBAAP,CACA,MAAO,8BAAP,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,QAAT,KAAyB,WAAzB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAASC,CAAAA,WAAT,CAAqBC,CAArB,CAAwBC,OAAxB,CAAiC,CAC7BD,CAAC,CAACE,cAAF,GACA,GAAMC,CAAAA,GAAG,CAAG,CAAC,WAAD,CAAa,WAAb,CAAyB,mBAAzB,CAA6C,aAA7C,CAA2D,UAA3D,CAAsE,WAAtE,CAAkF,WAAlF,CAA8F,UAA9F,CAAyG,UAAzG,CAAoH,SAApH,CAA8H,UAA9H,CAAyI,SAAzI,CAAmJ,UAAnJ,CAAZ,CACA,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACAD,GAAG,CAACE,GAAJ,CAAQ,SAAAC,EAAE,CAAI,CACV,GAAMC,CAAAA,KAAK,CAAGC,QAAQ,CAACC,cAAT,CAAwBH,EAAxB,CAAd,CACA,GAAIC,KAAK,CAACA,KAAN,GAAgB,EAApB,CAAwB,CACpB,MAAOC,CAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAYH,EAApC,EAAwCI,SAAxC,CAAkDC,MAAlD,CAAyD,QAAzD,CAAP,CACH,CAFD,IAEO,CACH,MAAOP,CAAAA,MAAM,CAACE,EAAD,CAAN,CAAaC,KAAK,CAACA,KAA1B,CACH,CACJ,CAPD,EAQA,GAAIK,MAAM,CAACC,OAAP,CAAeT,MAAf,EAAuBU,MAAvB,GAAkCX,GAAG,CAACW,MAA1C,CAAkD,OAC9C,GAAIC,CAAAA,IAAI,CAAG,CACX,OAAQ,CACJ,OAAQX,MAAM,CAACY,SADX,CAEJ,OAAQZ,MAAM,CAACa,SAFX,CAGJ,eAAgBb,MAAM,CAACc,iBAHnB,CAIJ,uBAAwBd,MAAM,CAACe,WAJ3B,CADG,CAOX,QAAS,CACL,UAAW,CACP,SAAUf,MAAM,CAACgB,QADV,CAEP,OAAQhB,MAAM,CAACiB,SAFR,CAGP,OAAQjB,MAAM,CAACkB,SAHR,CADN,CAML,WAAY,CACR,eAAgBlB,MAAM,CAACmB,QADf,CAER,iBAAkBnB,MAAM,CAACoB,QAFjB,CAGR,cAAepB,MAAM,CAACqB,OAHd,CANP,CAWL,WAAY,CACR,gBAAiBrB,MAAM,CAACsB,QADhB,CAER,eAAgBtB,MAAM,CAACuB,OAFf,CAGR,iBAAkBvB,MAAM,CAACwB,QAHjB,CAXP,CAgBL,YAAa,CACT,OAAQ,CADC,CAET,SAAU,CAFD,CAGT,SAAU,GAHD,CAhBR,CAPE,CAAX,CA8BJ/B,QAAQ,CAACkB,IAAD,CAAR,CACAd,OAAO,CAAC4B,IAAR,CAAa,GAAb,EACH,CAKD;AACA,QAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,CACb,GAAI9B,CAAAA,OAAO,CAAGH,UAAU,EAAxB,CACA,mBACI,2BAAK,SAAS,CAAC,MAAf,eACI,2BAAK,SAAS,CAAC,QAAf,EADJ,cAGI,8BAAQ,OAAO,CAAE,kBAAM,CAACG,OAAO,CAAC4B,IAAR,CAAa,GAAb,EAAkB,CAA1C,CAA4C,SAAS,CAAC,YAAtD,SAHJ,cAII,2BAAK,SAAS,CAAC,iBAAf,eACI,2BAAK,SAAS,CAAC,eAAf,EADJ,cAGI,4BAAM,SAAS,CAAC,OAAhB,eACI,6BAAO,OAAO,CAAC,uBAAf,CAAuC,SAAS,CAAC,cAAjD,cADJ,cAEI,2BAAK,SAAS,CAAC,UAAf,eACI,2BAAK,SAAS,CAAC,qBAAf,eACI,6BAAO,OAAO,CAAC,WAAf,SADJ,cAEI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAC,cAA7B,CAA4C,EAAE,CAAC,WAA/C,EAFJ,cAGI,2BAAK,EAAE,CAAC,kBAAR,CAA2B,SAAS,CAAC,yBAArC,0BAHJ,CADJ,cAQI,2BAAK,SAAS,CAAC,qBAAf,eACI,6BAAO,OAAO,CAAC,YAAf,SADJ,cAEI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAC,cAA7B,CAA4C,EAAE,CAAC,WAA/C,EAFJ,cAGI,2BAAK,EAAE,CAAC,kBAAR,CAA2B,SAAS,CAAC,yBAArC,0BAHJ,CARJ,cAeI,2BAAK,SAAS,CAAC,qBAAf,eACI,6BAAO,OAAO,CAAC,UAAf,iBADJ,cAEI,6BAAO,UAAU,CAAE,oBAAC7B,CAAD,CAAO,CACtB,GAAIA,CAAC,CAACgC,MAAF,CAASzB,KAAT,CAAeO,MAAf,CAAwB,CAA5B,CAA+Bd,CAAC,CAACE,cAAF,GAClC,CAFD,CAEG,IAAI,CAAC,MAFR,CAEe,SAAS,CAAC,cAFzB,CAEwC,EAAE,CAAC,mBAF3C,EAFJ,cAKI,2BAAK,EAAE,CAAC,0BAAR,CAAmC,SAAS,CAAC,yBAA7C,kCALJ,CAfJ,CAFJ,cA2BI,2BAAK,SAAS,CAAC,gBAAf,eACI,6BAAO,OAAO,CAAC,eAAf,CAA+B,SAAS,CAAC,yBAAzC,iBADJ,cAEI,2BAAK,SAAS,CAAC,WAAf,eACI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAC,cAA7B,CAA4C,EAAE,CAAC,aAA/C,CACO,WAAW,CAAC,oBADnB,EADJ,cAGI,2BAAK,EAAE,CAAC,oBAAR,CAA6B,SAAS,CAAC,yBAAvC,kCAHJ,CAFJ,CA3BJ,cAqCI,6BAAO,OAAO,CAAC,uBAAf,CAAuC,SAAS,CAAC,cAAjD,YArCJ,cAsCI,2BAAK,SAAS,CAAC,UAAf,eACI,2BAAK,SAAS,CAAC,qBAAf,eACI,6BAAO,OAAO,CAAC,WAAf,iBADJ,cAEI,6BAAO,UAAU,CAAE,oBAACF,CAAD,CAAO,CACtB,GAAIiC,KAAK,CAACjC,CAAC,CAACkC,GAAH,CAAT,CAAkBlC,CAAC,CAACE,cAAF,GACrB,CAFD,CAEG,IAAI,CAAC,MAFR,CAEe,SAAS,CAAC,cAFzB,CAEwC,EAAE,CAAC,UAF3C,EAFJ,cAKI,2BAAK,EAAE,CAAC,iBAAR,CAA0B,SAAS,CAAC,yBAApC,4CALJ,CADJ,cAUI,2BAAK,SAAS,CAAC,qBAAf,eACI,6BAAO,OAAO,CAAC,YAAf,SADJ,cAEI,6BAAO,UAAU,CAAE,oBAACF,CAAD,CAAO,CACtB,GAAIiC,KAAK,CAACjC,CAAC,CAACkC,GAAH,CAAT,CAAkBlC,CAAC,CAACE,cAAF,GACrB,CAFD,CAEG,IAAI,CAAC,MAFR,CAEe,SAAS,CAAC,cAFzB,CAEwC,EAAE,CAAC,WAF3C,EAFJ,cAKI,2BAAK,EAAE,CAAC,kBAAR,CAA2B,SAAS,CAAC,yBAArC,oCALJ,CAVJ,cAmBI,2BAAK,SAAS,CAAC,qBAAf,eACI,6BAAO,OAAO,CAAC,UAAf,SADJ,cAEI,6BAAO,UAAU,CAAE,oBAACF,CAAD,CAAO,CACtB,GAAIiC,KAAK,CAACjC,CAAC,CAACkC,GAAH,CAAT,CAAkBlC,CAAC,CAACE,cAAF,GACrB,CAFD,CAEG,IAAI,CAAC,MAFR,CAEe,SAAS,CAAC,cAFzB,CAEwC,EAAE,CAAC,WAF3C,EAFJ,cAKI,2BAAK,EAAE,CAAC,kBAAR,CAA2B,SAAS,CAAC,yBAArC,oCALJ,CAnBJ,CAtCJ,cAmEI,6BAAO,OAAO,CAAC,uBAAf,CAAuC,SAAS,CAAC,cAAjD,aAnEJ,cAoEI,2BAAK,SAAS,CAAC,UAAf,eACI,2BAAK,SAAS,CAAC,qBAAf,eACI,6BAAO,OAAO,CAAC,WAAf,wBADJ,cAEI,6BAAO,UAAU,CAAE,oBAACF,CAAD,CAAO,CACtB,GAAIiC,KAAK,CAACjC,CAAC,CAACkC,GAAH,CAAT,CAAkBlC,CAAC,CAACE,cAAF,GACrB,CAFD,CAEG,IAAI,CAAC,MAFR,CAEe,SAAS,CAAC,cAFzB,CAEwC,EAAE,CAAC,UAF3C,EAFJ,cAKI,2BAAK,EAAE,CAAC,iBAAR,CAA0B,SAAS,CAAC,yBAApC,mDALJ,CADJ,cAUI,2BAAK,SAAS,CAAC,qBAAf,eACI,6BAAO,OAAO,CAAC,YAAf,oBADJ,cAEI,6BAAO,UAAU,CAAE,oBAACF,CAAD,CAAO,CACtB,GAAIiC,KAAK,CAACjC,CAAC,CAACkC,GAAH,CAAT,CAAkBlC,CAAC,CAACE,cAAF,GACrB,CAFD,CAEG,IAAI,CAAC,MAFR,CAEe,SAAS,CAAC,cAFzB,CAEwC,EAAE,CAAC,UAF3C,EAFJ,cAKI,2BAAK,EAAE,CAAC,iBAAR,CAA0B,SAAS,CAAC,yBAApC,+CALJ,CAVJ,cAmBI,2BAAK,SAAS,CAAC,qBAAf,eACI,6BAAO,OAAO,CAAC,UAAf,iBADJ,cAEI,6BAAO,UAAU,CAAE,oBAACF,CAAD,CAAO,CACtB,GAAIiC,KAAK,CAACjC,CAAC,CAACkC,GAAH,CAAT,CAAkBlC,CAAC,CAACE,cAAF,GACrB,CAFD,CAEG,IAAI,CAAC,MAFR,CAEe,SAAS,CAAC,cAFzB,CAEwC,EAAE,CAAC,SAF3C,EAFJ,cAKI,2BAAK,EAAE,CAAC,gBAAR,CAAyB,SAAS,CAAC,yBAAnC,4CALJ,CAnBJ,CApEJ,cAiGI,6BAAO,OAAO,CAAC,uBAAf,CAAuC,SAAS,CAAC,cAAjD,cAjGJ,cAkGI,2BAAK,SAAS,CAAC,UAAf,eACI,2BAAK,SAAS,CAAC,qBAAf,eACI,6BAAO,OAAO,CAAC,WAAf,mBADJ,cAEI,6BAAO,UAAU,CAAE,oBAACF,CAAD,CAAO,CACtB,GAAIiC,KAAK,CAACjC,CAAC,CAACkC,GAAH,CAAT,CAAkBlC,CAAC,CAACE,cAAF,GACrB,CAFD,CAEG,IAAI,CAAC,MAFR,CAEe,SAAS,CAAC,cAFzB,CAEwC,EAAE,CAAC,UAF3C,EAFJ,cAKI,2BAAK,EAAE,CAAC,iBAAR,CAA0B,SAAS,CAAC,yBAApC,8CALJ,CADJ,cAUI,2BAAK,SAAS,CAAC,qBAAf,eACI,6BAAO,OAAO,CAAC,YAAf,kBADJ,cAEI,6BAAO,UAAU,CAAE,oBAACF,CAAD,CAAO,CACtB,GAAIiC,KAAK,CAACjC,CAAC,CAACkC,GAAH,CAAT,CAAkBlC,CAAC,CAACE,cAAF,GACrB,CAFD,CAEG,IAAI,CAAC,MAFR,CAEe,SAAS,CAAC,cAFzB,CAEwC,EAAE,CAAC,SAF3C,EAFJ,cAKI,2BAAK,EAAE,CAAC,gBAAR,CAAyB,SAAS,CAAC,yBAAnC,6CALJ,CAVJ,cAmBI,2BAAK,SAAS,CAAC,qBAAf,eACI,6BAAO,OAAO,CAAC,UAAf,qBADJ,cAEI,6BAAO,UAAU,CAAE,oBAACF,CAAD,CAAO,CACtB,GAAIiC,KAAK,CAACjC,CAAC,CAACkC,GAAH,CAAT,CAAkBlC,CAAC,CAACE,cAAF,GACrB,CAFD,CAEG,IAAI,CAAC,MAFR,CAEe,SAAS,CAAC,cAFzB,CAEwC,EAAE,CAAC,UAF3C,EAFJ,cAKI,2BAAK,EAAE,CAAC,iBAAR,CAA0B,SAAS,CAAC,yBAApC,gDALJ,CAnBJ,CAlGJ,cA+HI,8BAAQ,OAAO,CAAE,iBAACF,CAAD,CAAO,CAACD,WAAW,CAACC,CAAD,CAAIC,OAAJ,CAAX,CAAwB,CAAjD,CAAmD,IAAI,CAAC,QAAxD,CAAiE,SAAS,CAAC,iBAA3E,gBA/HJ,CAHJ,CAJJ,CADJ,CA4IP,CAED,GAAMkC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BC,QAAQ,CAAED,KAAK,CAACE,SADc,CAE9BC,WAAW,CAAEH,KAAK,CAACI,YAFW,CAG9BC,OAAO,CAAEL,KAAK,CAACM,QAHe,CAAL,EAA7B,CAMA,GAAMC,CAAAA,kBAAkB,CAAG,EAA3B,CAGA,GAAMC,CAAAA,aAAa,CAAGhD,OAAO,CACzBuC,eADyB,CAEzBQ,kBAFyB,CAAP,CAGpBb,IAHoB,CAAtB,CAKA,cAAec,CAAAA,aAAf","sourcesContent":["import React from 'react';\nimport '../stylesheets/form.css';\nimport '../stylesheets/bootstrap.css';\nimport { connect } from 'react-redux';\nimport { postTeam } from '../api.js';\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\n// function changeLosses(e) {\n//     let val = parseInt(e.target.value)\n//     if (isNaN(val) || val < 0) val = 0\n//     store.dispatch({type: \"UPDATE_LOSSES\", text: val})\n//     store.dispatch({type: \"UPDATE_AVG\"})\n// }\n// function changeWins(e) {\n//     let val = parseInt(e.target.value)\n//     if (isNaN(val) || val < 0) val = 0\n//     store.dispatch({type: \"UPDATE_WINS\", text: val})\n//     store.dispatch({type: \"UPDATE_AVG\"})\n// }\n\nfunction processForm(e, history) {\n    e.preventDefault()\n    const ids = [\"inputCity\",\"inputName\",\"inputAbbreviation\",\"inputImgSrc\",\"inputTAB\",\"inputRuns\",\"inputHits\",\"inputARE\",\"inputIPI\",\"inputAH\",\"inputIPL\",\"inputTC\",\"inputFTO\"]\n    let values = {}\n    ids.map(id => {\n        const value = document.getElementById(id)\n        if (value.value === \"\") {\n            return document.getElementById(\"invalid\" + id).classList.remove(\"hidden\")\n        } else {\n            return values[id] = value.value\n        }\n    })\n    if (Object.entries(values).length !== ids.length) return;\n        let json = {\n        \"team\": {\n            \"city\": values.inputCity,\n            \"name\": values.inputName,\n            \"abbreviation\": values.inputAbbreviation,\n            \"officialLogoImageSrc\": values.inputImgSrc\n        },\n        \"stats\": {\n            \"batting\": {\n                \"atBats\": values.inputTAB,\n                \"runs\": values.inputRuns,\n                \"hits\": values.inputHits\n            },\n            \"pitching\": {\n                \"earnedRunAvg\": values.inputARE,\n                \"inningsPitched\": values.inputIPI,\n                \"hitsAllowed\": values.inputAH\n            },\n            \"fielding\": {\n                \"inningsPlayed\": values.inputIPL,\n                \"totalChances\": values.inputTC,\n                \"fielderTagOuts\": values.inputFTO\n            },\n            \"standings\": {\n                \"wins\": 1,\n                \"losses\": 1,\n                \"winPct\": 0.5\n            }\n        }\n    }\n    postTeam(json)\n    history.push('/')\n}\n\n\n\n\n// App.js\nfunction Form(props) {\n        let history = useHistory();\n        return (\n            <div className=\"form\">\n                <div className=\"header\">\n               </div>\n                <button onClick={() => {history.push('/')}} className=\"formButton\">Back</button>\n                <div className=\"customContainer\">\n                    <div className=\"contentFilter\">\n                    </div>\n                    <form className=\"space\">\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Team Info</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">City</label>\n                                <input type=\"text\" className=\"form-control\" id=\"inputCity\"/>\n                                <div id=\"invalidinputCity\" className=\"invalid-feedback hidden\">\n                                    Please choose a City.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Name</label>\n                                <input type=\"text\" className=\"form-control\" id=\"inputName\"/>\n                                <div id=\"invalidinputName\" className=\"invalid-feedback hidden\">\n                                    Please choose a Name.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <label htmlFor=\"inputZip\">Abbreviation</label>\n                                <input onKeyPress={(e) => {\n                                    if (e.target.value.length > 2) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputAbbreviation\"/>\n                                <div id=\"invalidinputAbbreviation\" className=\"invalid-feedback hidden\">\n                                    Please choose a Abbreviation.\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Image Source</label>\n                            <div className=\"col-md-12\">\n                                <input type=\"text\" className=\"form-control\" id=\"inputImgSrc\"\n                                       placeholder=\"http://example.com\"/>\n                                <div id=\"invalidinputImgSrc\" className=\"invalid-feedback hidden\">\n                                    Please choose a Image Source.\n                                </div>\n                            </div>\n                        </div>\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Batting</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">Times at Bat</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputTAB\"/>\n                                <div id=\"invalidinputTAB\" className=\"invalid-feedback hidden\">\n                                    Please choose a Number of Times at Bat.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Runs</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputRuns\"/>\n                                <div id=\"invalidinputRuns\" className=\"invalid-feedback hidden\">\n                                    Please choose a Number of Runs.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputZip\">Hits</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputHits\"/>\n                                <div id=\"invalidinputHits\" className=\"invalid-feedback hidden\">\n                                    Please choose a Number of Hits.\n                                </div>\n                            </div>\n                        </div>\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Pitching</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">Average Runs Earned</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputARE\"/>\n                                <div id=\"invalidinputARE\" className=\"invalid-feedback hidden\">\n                                    Please choose a Number of Average Runs Earned.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Innings Pitched</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputIPI\"/>\n                                <div id=\"invalidinputIPI\" className=\"invalid-feedback hidden\">\n                                    Please choose a Number of Innings Pitched.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputZip\">Allowed Hits</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputAH\"/>\n                                <div id=\"invalidinputAH\" className=\"invalid-feedback hidden\">\n                                    Please choose a Number of Allowed Hits.\n                                </div>\n                            </div>\n                        </div>\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Fieldings</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">Innings Played</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputIPL\"/>\n                                <div id=\"invalidinputIPL\" className=\"invalid-feedback hidden\">\n                                    Please choose a Number of Innings Played.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Total Chances</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputTC\"/>\n                                <div id=\"invalidinputTC\" className=\"invalid-feedback hidden\">\n                                    Please choose a Number of Total Chances.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputZip\">Fielder Tag Outs</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputFTO\"/>\n                                <div id=\"invalidinputFTO\" className=\"invalid-feedback hidden\">\n                                    Please choose a Number of Fielder Tag Outs.\n                                </div>\n                            </div>\n                        </div>\n                        <button onClick={(e) => {processForm(e, history)}} type=\"sumbit\" className=\"btn btn-primary\">Create Team</button>\n                    </form>\n                </div>\n            </div>\n        );\n}\n\nconst mapStateToProps = state => ({\n    mlbStats: state.mlb_stats,\n    CurrentList: state.current_list,\n    FormAvg: state.form_avg\n});\n\nconst mapDispatchToProps = {\n};\n\nconst FormContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Form);\n\nexport default FormContainer;\n"]},"metadata":{},"sourceType":"module"}