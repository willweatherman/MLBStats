{"ast":null,"code":"import { deleteTeam } from \"./api\";\nexport function random() {\n  return Math.random();\n}\nexport function filterStats(stats, filterSection, filterBar, searchSection, searchBar, currentList, operator) {\n  if (stats === []) return stats;\n  filterBar = filterBar === '' || filterBar === '0' ? 0 : filterBar.toString().replace(/^0+/, '');\n  stats = stats.filter(team => {\n    const number = team.stats[currentList.toLowerCase()][filterSection];\n\n    if (operator === '>') {\n      return parseInt(number) > filterBar;\n    } else if (operator === '=') {\n      return parseInt(number) === filterBar;\n    } else {\n      return parseInt(number) < filterBar;\n    }\n  });\n  return stats.filter(team => {\n    const regex = new RegExp(searchBar, 'gi');\n    return team.team[searchSection.toLowerCase()].match(regex);\n  });\n}\nexport function sortStats(state, sortName, currentList) {\n  if (state === []) return state;\n  return state.sort((a, b) => {\n    if (sortName === \"city\" || sortName === \"name\" || sortName === \"abbreviation\" || sortName === \"officialLogoImageSrc\") return a.team[sortName].toLowerCase() >= b.team[sortName].toLowerCase() ? 1 : -1;\n    if (currentList === \"Standings\") return a.stats.standings[sortName] <= b.stats.standings[sortName] ? 1 : -1;\n    if (currentList === \"Batting\") return a.stats.batting[sortName] <= b.stats.batting[sortName] ? 1 : -1;\n    if (currentList === \"Pitching\") return a.stats.pitching[sortName] <= b.stats.pitching[sortName] ? 1 : -1;\n    if (currentList === \"Fielding\") return a.stats.fielding[sortName] <= b.stats.fielding[sortName] ? 1 : -1;\n  });\n}\nexport async function removeTeam(e, TeamObj) {\n  await deleteTeam(TeamObj._links.self.href.replace(\"http://localhost:9000\", \"\"));\n  alert(\"Deleted Team \" + TeamObj.team.name);\n}","map":{"version":3,"sources":["/Users/willweatherman/gs-accessing-mongodb-data-rest/ui/src/utils.js"],"names":["deleteTeam","random","Math","filterStats","stats","filterSection","filterBar","searchSection","searchBar","currentList","operator","toString","replace","filter","team","number","toLowerCase","parseInt","regex","RegExp","match","sortStats","state","sortName","sort","a","b","standings","batting","pitching","fielding","removeTeam","e","TeamObj","_links","self","href","alert","name"],"mappings":"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","sourcesContent":["import {deleteTeam} from \"./api\";\n\nexport function random() {\n    return Math.random();\n}\n\n\nexport function filterStats(stats, filterSection, filterBar, searchSection, searchBar, currentList, operator) {\n    if (stats === []) return stats;\n    filterBar = (filterBar === '' || filterBar === '0') ? 0 : filterBar.toString().replace(/^0+/, '');\n    stats = stats.filter(team => {\n        const number = team.stats[currentList.toLowerCase()][filterSection]\n        if (operator === '>') {\n            return (parseInt(number) > filterBar)\n        } else if (operator === '=') {\n            return (parseInt(number) === filterBar)\n        } else {\n            return (parseInt(number) < filterBar)\n        }\n    })\n    return stats.filter(team => {\n        const regex = new RegExp(searchBar, 'gi');\n        return team.team[searchSection.toLowerCase()].match(regex)\n    });\n}\n\n\nexport function sortStats(state, sortName, currentList) {\n    if (state === []) return state;\n    return state.sort((a, b) => {\n        if (sortName === \"city\" || sortName === \"name\" || sortName === \"abbreviation\" || sortName === \"officialLogoImageSrc\") return (a.team[sortName].toLowerCase() >= b.team[sortName].toLowerCase()) ? 1 : -1\n        if (currentList === \"Standings\") return (a.stats.standings[sortName] <= b.stats.standings[sortName]) ? 1 : -1\n        if (currentList === \"Batting\") return (a.stats.batting[sortName] <= b.stats.batting[sortName]) ? 1 : -1\n        if (currentList === \"Pitching\") return (a.stats.pitching[sortName] <= b.stats.pitching[sortName]) ? 1 : -1\n        if (currentList === \"Fielding\") return (a.stats.fielding[sortName] <= b.stats.fielding[sortName]) ? 1 : -1\n    })\n}\n\n\nexport async function removeTeam(e, TeamObj) {\n    await deleteTeam(TeamObj._links.self.href.replace(\"http://localhost:9000\", \"\"))\n    alert(\"Deleted Team \" + TeamObj.team.name)\n}"]},"metadata":{},"sourceType":"module"}