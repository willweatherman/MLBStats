{"ast":null,"code":"import { createStore } from 'redux';\n\nfunction todos(state = {}, action) {\n  switch (action.type) {\n    case 'CLEAR_MLB_STATS':\n      return { ...state,\n        mlb_stats: []\n      };\n\n    case 'ADD_MLB_STATS':\n      return { ...state,\n        mlb_stats: state.mlb_stats.concat(action.state.mlb_stats)\n      };\n\n    case 'FILTER_STATS':\n      return { ...state,\n        filtered_stats: action.state\n      };\n\n    case 'CHANGE_FILTER':\n      return { ...state,\n        filter_obj: action.filterObj\n      };\n\n    case 'CHANGE_SORT':\n      return { ...state,\n        sort_name: action.sortName\n      };\n\n    case 'CHANGE_LIST':\n      return { ...state,\n        CurrentList: action.text\n      };\n\n    case 'UPDATE_AVG':\n      if (state.FormWins === 0) return { ...state,\n        FormAvg: 0\n      };\n      return { ...state,\n        FormAvg: (state.FormWins / (state.FormWins + state.FormLosses)).toFixed(3)\n      };\n\n    case 'UPDATE_WINS':\n      return { ...state,\n        FormWins: action.text\n      };\n\n    case 'UPDATE_LOSSES':\n      return { ...state,\n        FormLosses: action.text\n      };\n\n    default:\n      return state;\n  }\n}\n\nlet store = createStore(todos, {\n  mlb_stats: [],\n  filtered_stats: [],\n  filter_obj: {},\n  sort_name: \"city\",\n  CurrentList: \"OverAll\",\n  CurrentSort: \"city\",\n  FormAvg: 0,\n  FormWins: 0,\n  FormLosses: 0\n});\nexport default store;","map":{"version":3,"sources":["/Users/willweatherman/gs-accessing-mongodb-data-rest/ui/src/store.js"],"names":["createStore","todos","state","action","type","mlb_stats","concat","filtered_stats","filter_obj","filterObj","sort_name","sortName","CurrentList","text","FormWins","FormAvg","FormLosses","toFixed","store","CurrentSort"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;;AAEA,SAASC,KAAT,CAAeC,KAAK,GAAG,EAAvB,EAA2BC,MAA3B,EAAmC;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,iBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHG,QAAAA,SAAS,EAAE;AAFR,OAAP;;AAIJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHG,QAAAA,SAAS,EAAEH,KAAK,CAACG,SAAN,CAAgBC,MAAhB,CAAuBH,MAAM,CAACD,KAAP,CAAaG,SAApC;AAFR,OAAP;;AAIJ,SAAK,cAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHK,QAAAA,cAAc,EAAEJ,MAAM,CAACD;AAFpB,OAAP;;AAIJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGA,KADA;AAEHM,QAAAA,UAAU,EAAEL,MAAM,CAACM;AAFhB,OAAP;;AAIJ,SAAK,aAAL;AACI,aAAO,EACH,GAAGP,KADA;AAEHQ,QAAAA,SAAS,EAAEP,MAAM,CAACQ;AAFf,OAAP;;AAIJ,SAAK,aAAL;AACI,aAAO,EACH,GAAGT,KADA;AAEHU,QAAAA,WAAW,EAAET,MAAM,CAACU;AAFjB,OAAP;;AAIJ,SAAK,YAAL;AACI,UAAIX,KAAK,CAACY,QAAN,KAAmB,CAAvB,EAA0B,OAAO,EAC7B,GAAGZ,KAD0B;AAE7Ba,QAAAA,OAAO,EAAE;AAFoB,OAAP;AAI1B,aAAO,EACH,GAAGb,KADA;AAEHa,QAAAA,OAAO,EAAE,CAACb,KAAK,CAACY,QAAN,IAAkBZ,KAAK,CAACY,QAAN,GAAiBZ,KAAK,CAACc,UAAzC,CAAD,EAAuDC,OAAvD,CAA+D,CAA/D;AAFN,OAAP;;AAIJ,SAAK,aAAL;AACI,aAAO,EACH,GAAGf,KADA;AAEHY,QAAAA,QAAQ,EAAEX,MAAM,CAACU;AAFd,OAAP;;AAIJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGX,KADA;AAEHc,QAAAA,UAAU,EAAEb,MAAM,CAACU;AAFhB,OAAP;;AAIJ;AACI,aAAOX,KAAP;AAnDR;AAqDH;;AACD,IAAIgB,KAAK,GAAGlB,WAAW,CAACC,KAAD,EAAQ;AAC3BI,EAAAA,SAAS,EAAE,EADgB;AAE3BE,EAAAA,cAAc,EAAE,EAFW;AAG3BC,EAAAA,UAAU,EAAE,EAHe;AAI3BE,EAAAA,SAAS,EAAE,MAJgB;AAK3BE,EAAAA,WAAW,EAAE,SALc;AAM3BO,EAAAA,WAAW,EAAE,MANc;AAO3BJ,EAAAA,OAAO,EAAE,CAPkB;AAQ3BD,EAAAA,QAAQ,EAAE,CARiB;AAS3BE,EAAAA,UAAU,EAAE;AATe,CAAR,CAAvB;AAgBA,eAAeE,KAAf","sourcesContent":["import { createStore } from 'redux'\n\nfunction todos(state = {}, action) {\n    switch (action.type) {\n        case 'CLEAR_MLB_STATS':\n            return {\n                ...state,\n                mlb_stats: []\n            }\n        case 'ADD_MLB_STATS':\n            return {\n                ...state,\n                mlb_stats: state.mlb_stats.concat(action.state.mlb_stats),\n            }\n        case 'FILTER_STATS':\n            return {\n                ...state,\n                filtered_stats: action.state\n            }\n        case 'CHANGE_FILTER':\n            return {\n                ...state,\n                filter_obj: action.filterObj\n            }\n        case 'CHANGE_SORT':\n            return {\n                ...state,\n                sort_name: action.sortName\n            }\n        case 'CHANGE_LIST':\n            return {\n                ...state,\n                CurrentList: action.text\n            }\n        case 'UPDATE_AVG':\n            if (state.FormWins === 0) return {\n                ...state,\n                FormAvg: 0\n            }\n            return {\n                ...state,\n                FormAvg: (state.FormWins / (state.FormWins + state.FormLosses)).toFixed(3)\n            }\n        case 'UPDATE_WINS':\n            return {\n                ...state,\n                FormWins: action.text\n            }\n        case 'UPDATE_LOSSES':\n            return {\n                ...state,\n                FormLosses: action.text\n            }\n        default:\n            return state\n    }\n}\nlet store = createStore(todos, {\n    mlb_stats: [],\n    filtered_stats: [],\n    filter_obj: {},\n    sort_name: \"city\",\n    CurrentList: \"OverAll\",\n    CurrentSort: \"city\",\n    FormAvg: 0,\n    FormWins: 0,\n    FormLosses: 0\n})\n\n\n\n\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}