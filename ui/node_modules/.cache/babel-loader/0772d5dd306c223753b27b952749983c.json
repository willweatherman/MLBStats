{"ast":null,"code":"export function genFields(mlbStats, currSection) {\n  if (mlbStats == null) return {\n    \"stats\": [],\n    \"info\": []\n  };\n  let stats = [];\n  let info = [];\n  Object.entries(mlbStats[0].team).map(keyValue => {\n    stats = stats.concat(keyValue[0]);\n  });\n\n  switch (currSection) {\n    case \"OverAll\":\n      {\n        Object.entries(mlbStats[0].stats.standings).map(keyValue => {\n          stats = stats.concat(keyValue[0]);\n        });\n        mlbStats.map(team => {\n          let obj = {};\n          Object.entries(team.team).map(keyValue => {\n            obj[keyValue[0]] = keyValue[1];\n          });\n          Object.entries(team.stats.standings).map(keyValue => {\n            obj[keyValue[0]] = keyValue[1];\n          });\n          info = info.concat(obj);\n        });\n      }\n\n    case \"Batting\":\n      {\n        console.log(\"hi\");\n        Object.entries(mlbStats[0].stats.batting).map(keyValue => {\n          stats = stats.concat(keyValue[0]);\n        });\n        mlbStats.map(team => {\n          let obj = {};\n          Object.entries(team.team).map(keyValue => {\n            obj[keyValue[0]] = keyValue[1];\n          });\n          Object.entries(team.stats.batting).map(keyValue => {\n            obj[keyValue[0]] = keyValue[1];\n          });\n          info = info.concat(obj);\n        });\n      }\n\n    default:\n      {}\n  }\n\n  console.log(stats);\n  return {\n    \"stats\": stats,\n    \"info\": info\n  };\n}","map":{"version":3,"sources":["/Users/willweatherman/gs-accessing-mongodb-data-rest/ui/src/services/index.js"],"names":["genFields","mlbStats","currSection","stats","info","Object","entries","team","map","keyValue","concat","standings","obj","console","log","batting"],"mappings":"AAAA,OAAO,SAASA,SAAT,CAAmBC,QAAnB,EAA6BC,WAA7B,EAA0C;AAC7C,MAAID,QAAQ,IAAI,IAAhB,EAAsB,OAAO;AAAC,aAAS,EAAV;AAAc,YAAQ;AAAtB,GAAP;AACtB,MAAIE,KAAK,GAAG,EAAZ;AACA,MAAIC,IAAI,GAAG,EAAX;AACAC,EAAAA,MAAM,CAACC,OAAP,CAAeL,QAAQ,CAAC,CAAD,CAAR,CAAYM,IAA3B,EAAiCC,GAAjC,CAAqCC,QAAQ,IAAI;AAC7CN,IAAAA,KAAK,GAAGA,KAAK,CAACO,MAAN,CAAaD,QAAQ,CAAC,CAAD,CAArB,CAAR;AACH,GAFD;;AAGA,UAAQP,WAAR;AACI,SAAK,SAAL;AAAgB;AACZG,QAAAA,MAAM,CAACC,OAAP,CAAeL,QAAQ,CAAC,CAAD,CAAR,CAAYE,KAAZ,CAAkBQ,SAAjC,EAA4CH,GAA5C,CAAgDC,QAAQ,IAAI;AACxDN,UAAAA,KAAK,GAAGA,KAAK,CAACO,MAAN,CAAaD,QAAQ,CAAC,CAAD,CAArB,CAAR;AACH,SAFD;AAGAR,QAAAA,QAAQ,CAACO,GAAT,CAAaD,IAAI,IAAI;AACjB,cAAIK,GAAG,GAAG,EAAV;AACAP,UAAAA,MAAM,CAACC,OAAP,CAAeC,IAAI,CAACA,IAApB,EAA0BC,GAA1B,CAA8BC,QAAQ,IAAI;AACtCG,YAAAA,GAAG,CAACH,QAAQ,CAAC,CAAD,CAAT,CAAH,GAAmBA,QAAQ,CAAC,CAAD,CAA3B;AACH,WAFD;AAGAJ,UAAAA,MAAM,CAACC,OAAP,CAAeC,IAAI,CAACJ,KAAL,CAAWQ,SAA1B,EAAqCH,GAArC,CAAyCC,QAAQ,IAAI;AACjDG,YAAAA,GAAG,CAACH,QAAQ,CAAC,CAAD,CAAT,CAAH,GAAmBA,QAAQ,CAAC,CAAD,CAA3B;AACH,WAFD;AAGAL,UAAAA,IAAI,GAAGA,IAAI,CAACM,MAAL,CAAYE,GAAZ,CAAP;AACH,SATD;AAUH;;AACD,SAAK,SAAL;AAAgB;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAT,QAAAA,MAAM,CAACC,OAAP,CAAeL,QAAQ,CAAC,CAAD,CAAR,CAAYE,KAAZ,CAAkBY,OAAjC,EAA0CP,GAA1C,CAA8CC,QAAQ,IAAI;AACtDN,UAAAA,KAAK,GAAGA,KAAK,CAACO,MAAN,CAAaD,QAAQ,CAAC,CAAD,CAArB,CAAR;AACH,SAFD;AAGAR,QAAAA,QAAQ,CAACO,GAAT,CAAaD,IAAI,IAAI;AACjB,cAAIK,GAAG,GAAG,EAAV;AACAP,UAAAA,MAAM,CAACC,OAAP,CAAeC,IAAI,CAACA,IAApB,EAA0BC,GAA1B,CAA8BC,QAAQ,IAAI;AACtCG,YAAAA,GAAG,CAACH,QAAQ,CAAC,CAAD,CAAT,CAAH,GAAmBA,QAAQ,CAAC,CAAD,CAA3B;AACH,WAFD;AAGAJ,UAAAA,MAAM,CAACC,OAAP,CAAeC,IAAI,CAACJ,KAAL,CAAWY,OAA1B,EAAmCP,GAAnC,CAAuCC,QAAQ,IAAI;AAC/CG,YAAAA,GAAG,CAACH,QAAQ,CAAC,CAAD,CAAT,CAAH,GAAmBA,QAAQ,CAAC,CAAD,CAA3B;AACH,WAFD;AAGAL,UAAAA,IAAI,GAAGA,IAAI,CAACM,MAAL,CAAYE,GAAZ,CAAP;AACH,SATD;AAUH;;AACD;AAAS,OAER;AAlCL;;AAqCAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AAEA,SAAO;AAAC,aAASA,KAAV;AAAiB,YAAQC;AAAzB,GAAP;AACH","sourcesContent":["export function genFields(mlbStats, currSection) {\n    if (mlbStats == null) return {\"stats\": [], \"info\": []}\n    let stats = []\n    let info = []\n    Object.entries(mlbStats[0].team).map(keyValue => {\n        stats = stats.concat(keyValue[0])\n    })\n    switch (currSection) {\n        case \"OverAll\": {\n            Object.entries(mlbStats[0].stats.standings).map(keyValue => {\n                stats = stats.concat(keyValue[0])\n            })\n            mlbStats.map(team => {\n                let obj = {}\n                Object.entries(team.team).map(keyValue => {\n                    obj[keyValue[0]] = keyValue[1]\n                })\n                Object.entries(team.stats.standings).map(keyValue => {\n                    obj[keyValue[0]] = keyValue[1]\n                })\n                info = info.concat(obj)\n            })\n        }\n        case \"Batting\": {\n            console.log(\"hi\")\n            Object.entries(mlbStats[0].stats.batting).map(keyValue => {\n                stats = stats.concat(keyValue[0])\n            })\n            mlbStats.map(team => {\n                let obj = {}\n                Object.entries(team.team).map(keyValue => {\n                    obj[keyValue[0]] = keyValue[1]\n                })\n                Object.entries(team.stats.batting).map(keyValue => {\n                    obj[keyValue[0]] = keyValue[1]\n                })\n                info = info.concat(obj)\n            })\n        }\n        default: {\n            \n        }\n    }\n\n    console.log(stats)\n\n    return {\"stats\": stats, \"info\": info}\n}\n\n"]},"metadata":{},"sourceType":"module"}