{"ast":null,"code":"var _jsxFileName = \"/Users/willweatherman/gs-accessing-mongodb-data-rest/ui/src/components/form.js\";\nimport React from 'react';\nimport '../stylesheets/form.css';\nimport '../stylesheets/bootstrap.css';\nimport { connect } from 'react-redux';\nimport { postTeam } from '../api.js';\nimport store from \"../store\";\nimport { genFields } from '../services/index.js'; // function ChangeList(i) {\n//     // getTasks()\n//     store.dispatch({type: \"CHANGE_LIST\", text: i})\n// }\n\nfunction ChangeRoute() {\n  console.log(\"changeroute\");\n}\n\nfunction ChangeLosses(e) {\n  let val = parseInt(e.target.value);\n  if (isNaN(val) || val < 0) val = 0;\n  store.dispatch({\n    type: \"UPDATE_LOSSES\",\n    text: val\n  });\n  store.dispatch({\n    type: \"UPDATE_AVG\"\n  });\n}\n\nfunction ChangeWins(e) {\n  let val = parseInt(e.target.value);\n  if (isNaN(val) || val < 0) val = 0;\n  store.dispatch({\n    type: \"UPDATE_WINS\",\n    text: val\n  });\n  store.dispatch({\n    type: \"UPDATE_AVG\"\n  });\n}\n\nfunction ProcessForm(e) {\n  e.preventDefault();\n  let json = {\n    \"team\": {\n      \"city\": \"\",\n      \"name\": \"\",\n      \"abbreviation\": \"\",\n      \"officialLogoImageSrc\": \"\"\n    },\n    \"stats\": {\n      \"batting\": {\n        \"atBats\": 0,\n        \"runs\": 0,\n        \"hits\": 0\n      },\n      \"pitching\": {\n        \"earnedRunAvg\": 0.00,\n        \"inningsPitched\": 0,\n        \"hitsAllowed\": 0\n      },\n      \"fielding\": {\n        \"inningsPlayed\": 0,\n        \"totalChances\": 0,\n        \"fielderTagOuts\": 0\n      },\n      \"standings\": {\n        \"wins\": 0,\n        \"losses\": 0,\n        \"winPct\": 0.0\n      }\n    }\n  };\n  const entries = Object.entries(form).map(keyValue => {});\n  postTeam(JSON.stringify(json));\n} // App.js\n\n\nfunction Form(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contentFilter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"formGroupExampleInput\",\n    className: \"sectionLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"Team Info\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputCity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputcity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputState\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputZip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, \"Abbreviation\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (e.target.value.length > 2) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputabbreviation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputImgSrc\",\n    placeholder: \"http://example.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"formGroupExampleInput\",\n    className: \"sectionLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, \"Standings\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputCity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }, \"Wins\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    onInput: e => {\n      ChangeWins(e);\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputWins\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputState\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, \"Losses\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    onInput: e => {\n      ChangeLosses(e);\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputLosses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputState\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 33\n    }\n  }, \"Win Loss Percentage\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: props.FormAvg,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputWLP\",\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"formGroupExampleInput\",\n    className: \"sectionLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, \"Batting\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputCity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  }, \"Times at Bat\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputTAB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputState\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }, \"Runs\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputRuns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputZip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }\n  }, \"Hits\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputHits\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"formGroupExampleInput\",\n    className: \"sectionLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, \"Pitching\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputCity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 33\n    }\n  }, \"Average Runs Earned\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputARE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputState\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 33\n    }\n  }, \"Innings Pitched\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputIPI\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputZip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 33\n    }\n  }, \"Allowed Hits\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputAH\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"formGroupExampleInput\",\n    className: \"sectionLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, \"Fieldings\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputCity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 33\n    }\n  }, \"Innings Played\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputIPL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputState\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 33\n    }\n  }, \"Total Chances\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputTC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputZip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 33\n    }\n  }, \"Fielder Tag Outs\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: e => {\n      if (isNaN(e.key)) e.preventDefault();\n    },\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputFTO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      ProcessForm(e);\n    },\n    type: \"sumbit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }, \"Create Team\"))));\n}\n\nconst mapStateToProps = state => ({\n  mlbStats: state.mlb_stats,\n  CurrentList: state.CurrentList,\n  CurrentSort: state.CurrentSort,\n  FormAvg: state.FormAvg\n});\n\nconst mapDispatchToProps = {};\nconst FormContainer = connect(mapStateToProps, mapDispatchToProps)(Form);\nexport default FormContainer;","map":{"version":3,"sources":["/Users/willweatherman/gs-accessing-mongodb-data-rest/ui/src/components/form.js"],"names":["React","connect","postTeam","store","genFields","ChangeRoute","console","log","ChangeLosses","e","val","parseInt","target","value","isNaN","dispatch","type","text","ChangeWins","ProcessForm","preventDefault","json","entries","Object","form","map","keyValue","JSON","stringify","Form","props","length","key","FormAvg","mapStateToProps","state","mlbStats","mlb_stats","CurrentList","CurrentSort","mapDispatchToProps","FormContainer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../stylesheets/form.css';\nimport '../stylesheets/bootstrap.css';\nimport { connect } from 'react-redux';\nimport { postTeam } from '../api.js';\nimport store from \"../store\";\nimport { genFields } from '../services/index.js'\n\n\n\n// function ChangeList(i) {\n//     // getTasks()\n//     store.dispatch({type: \"CHANGE_LIST\", text: i})\n// }\n\nfunction ChangeRoute() {\n    console.log(\"changeroute\")\n}\n\nfunction ChangeLosses(e) {\n    let val = parseInt(e.target.value)\n    if (isNaN(val) || val < 0) val = 0\n    store.dispatch({type: \"UPDATE_LOSSES\", text: val})\n    store.dispatch({type: \"UPDATE_AVG\"})\n}\nfunction ChangeWins(e) {\n    let val = parseInt(e.target.value)\n    if (isNaN(val) || val < 0) val = 0\n    store.dispatch({type: \"UPDATE_WINS\", text: val})\n    store.dispatch({type: \"UPDATE_AVG\"})\n}\n\nfunction ProcessForm(e) {\n    e.preventDefault()\n    let json = {\n        \"team\": {\n            \"city\": \"\",\n            \"name\": \"\",\n            \"abbreviation\": \"\",\n            \"officialLogoImageSrc\": \"\"\n        },\n        \"stats\": {\n            \"batting\": {\n                \"atBats\": 0,\n                \"runs\": 0,\n                \"hits\": 0\n            },\n            \"pitching\": {\n                \"earnedRunAvg\": 0.00,\n                \"inningsPitched\": 0,\n                \"hitsAllowed\": 0\n            },\n            \"fielding\": {\n                \"inningsPlayed\": 0,\n                \"totalChances\": 0,\n                \"fielderTagOuts\": 0\n            },\n            \"standings\": {\n                \"wins\": 0,\n                \"losses\": 0,\n                \"winPct\": 0.0\n            }\n        }\n    }\n    const entries = Object.entries(form).map(keyValue => {\n\n    })\n\n    postTeam(JSON.stringify(json))\n}\n\n\n\n\n// App.js\nfunction Form(props) {\n        return (\n            <div className=\"form\">\n                <div className=\"header\">\n               </div>\n                <div className=\"customContainer\">\n                    <div className=\"contentFilter\">\n                    </div>\n                    <form className=\"space\">\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Team Info</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">City</label>\n                                <input type=\"text\" className=\"form-control\" id=\"inputcity\"/>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Name</label>\n                                <input type=\"text\" className=\"form-control\" id=\"inputname\"/>\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <label htmlFor=\"inputZip\">Abbreviation</label>\n                                <input onKeyPress={(e) => {\n                                    if (e.target.value.length > 2) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputabbreviation\"/>\n                            </div>\n                        </div>\n                        {/*<label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Image Source</label>*/}\n                        <div className=\"form-group row\">\n                            <div className=\"col-md-12\">\n                                <input type=\"text\" className=\"form-control\" id=\"inputImgSrc\"\n                                       placeholder=\"http://example.com\"/>\n                            </div>\n                        </div>\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Standings</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">Wins</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} onInput={(e) => {ChangeWins(e)}} type=\"text\" className=\"form-control\" id=\"inputWins\"/>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Losses</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} onInput={(e) => {ChangeLosses(e)}} type=\"text\" className=\"form-control\" id=\"inputLosses\"/>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Win Loss Percentage</label>\n                                <input value={props.FormAvg} type=\"text\" className=\"form-control\" id=\"inputWLP\" readOnly/>\n                            </div>\n                        </div>\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Batting</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">Times at Bat</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputTAB\"/>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Runs</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputRuns\"/>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputZip\">Hits</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputHits\"/>\n                            </div>\n                        </div>\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Pitching</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">Average Runs Earned</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputARE\"/>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Innings Pitched</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputIPI\"/>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputZip\">Allowed Hits</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputAH\"/>\n                            </div>\n                        </div>\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Fieldings</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">Innings Played</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputIPL\"/>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Total Chances</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputTC\"/>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputZip\">Fielder Tag Outs</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputFTO\"/>\n                            </div>\n                        </div>\n                        <button onClick={(e) => {ProcessForm(e)}} type=\"sumbit\" className=\"btn btn-primary\">Create Team</button>\n                    </form>\n                </div>\n            </div>\n        );\n}\n\nconst mapStateToProps = state => ({\n    mlbStats: state.mlb_stats,\n    CurrentList: state.CurrentList,\n    CurrentSort: state.CurrentSort,\n    FormAvg: state.FormAvg\n});\n\nconst mapDispatchToProps = {\n};\n\nconst FormContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Form);\n\nexport default FormContainer;\n"]},"metadata":{},"sourceType":"module"}