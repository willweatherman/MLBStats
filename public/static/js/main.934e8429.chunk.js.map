{"version":3,"sources":["store.js","actions.js","api.js","utils.js","components/TrashCans.jsx","components/Teams.jsx","components/Options.jsx","components/Home.jsx","components/Form.jsx","app.js","serviceWorker.js","index.js"],"names":["store","createStore","state","action","type","mlb_stats","concat","sort_name","current_list","text","form_wins","form_vg","form_avg","form_losses","toFixed","search_bar","search_section","filter_bar","filter_section","operator","window","__REDUX_DEVTOOLS_EXTENSION__","changeList","newList","sortedState","dispatch","Object","entries","stats","toLowerCase","range","start","end","getAllTeams","a","fetch","then","response","json","data","arr","parseInt","page","totalPages","Promise","all","map","pageNum","getTeam","pagenum","_embedded","console","log","method","body","JSON","stringify","headers","deleteTeam","link","random","Math","genFields","mlbStats","currSection","info","team","keyValue","currentlist","obj","e","TeamObj","_links","self","href","replace","alert","name","TrashCanContainer","connect","props","counter","className","sortedStats","length","disabled","key","style","backgroundColor","onClick","removeTeam","TeamsContainer","currentList","i","changeSort","sortName","y","alt","src","OptionsContainer","onChange","section","target","value","id","mlbstats","filterSection","arrayOfHtml","unshift","push","options","HomeContainer","searchBar","searchSection","filterBar","history","useHistory","filteredStats","toString","filter","number","regex","RegExp","match","filterStats","sort","b","standings","batting","pitching","fielding","defaultValue","onInput","oper","onKeyPress","isNaN","preventDefault","processForm","ids","values","document","getElementById","classList","remove","postTeam","inputCity","inputName","inputAbbreviation","inputImgSrc","inputTAB","inputRuns","inputHits","inputARE","inputIPI","inputAH","inputIPL","inputTC","inputFTO","FormContainer","CurrentList","FormAvg","htmlFor","placeholder","App","path","Component","Boolean","location","hostname","ReactDOM","render","StrictMode","rel","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.934e8429.chunk.js","sourcesContent":["import { createStore } from 'redux'\n\nfunction todos(state = {}, action) {\n    switch (action.type) {\n        case 'CLEAR_MLB_STATS':\n            return {\n                ...state,\n                mlb_stats: []\n            }\n        case 'ADD_MLB_STATS':\n            return {\n                ...state,\n                mlb_stats: state.mlb_stats.concat(action.state.mlb_stats),\n            }\n        case 'CHANGE_SORT':\n            return {\n                ...state,\n                sort_name: action.sort_name\n            }\n        case 'CHANGE_LIST':\n            return {\n                ...state,\n                current_list: action.text\n            }\n        case 'UPDATE_AVG':\n            if (state.form_wins === 0) return {\n                ...state,\n                form_vg: 0\n            }\n            return {\n                ...state,\n                form_avg: (state.form_wins / (state.form_wins + state.form_losses)).toFixed(3)\n            }\n        case 'UPDATE_SEARCH_BAR':\n            return {\n                ...state,\n                search_bar: action.text\n            }\n        case 'UPDATE_SEARCH_SECTION':\n            return {\n                ...state,\n                search_section: action.text\n            }\n        case 'UPDATE_FILTER_BAR':\n            return {\n                ...state,\n                filter_bar: action.text\n            }\n        case 'UPDATE_FILTER_SECTION':\n            return {\n                ...state,\n                filter_section: action.text\n            }\n        case 'UPDATE_WINS':\n            return {\n                ...state,\n                form_wins: action.text\n            }\n        case 'UPDATE_LOSSES':\n            return {\n                ...state,\n                form_losses: action.text\n            }\n        case 'UPDATE_OPPERATOR':\n            return {\n                ...state,\n                operator: action.text\n            }\n        default:\n            return state\n    }\n}\nlet store = createStore(todos, {\n    mlb_stats: [],\n    filter_bar: \"\",\n    filter_section: \"wins\",\n    operator: \">\",\n    search_bar: \"\",\n    search_section: \"city\",\n    sort_name: \"city\",\n    current_list: \"Standings\",\n    form_avg: 0,\n    form_wins: 0,\n    form_losses: 0\n}, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\n\n\n\n\nexport default store\n","import store from \"./store\";\n\nexport function searchBar(e) {\n    store.dispatch({type: \"UPDATE_SEARCH_BAR\", text: e.target.value})\n}\n\nexport function searchSection(section) {\n    store.dispatch({type: \"UPDATE_SEARCH_SECTION\", text: section})\n}\n\nexport function filterBar(e) {\n    store.dispatch({type: \"UPDATE_FILTER_BAR\", text: e.target.value})\n}\n\nexport function filterSection(section) {\n    store.dispatch({type: \"UPDATE_FILTER_SECTION\", text: section})\n}\n\nexport function changeOperator(oper) {\n    store.dispatch({type: \"UPDATE_OPPERATOR\", text: oper})\n}\nexport function changeSort(i) {\n    store.dispatch({type: \"CHANGE_SORT\", sort_name: i})\n}\nexport function changeList(newList, sortedState) {\n    store.dispatch({type: \"CHANGE_LIST\", text: newList})\n    store.dispatch({type: \"UPDATE_FILTER_SECTION\", text: Object.entries(sortedState[0].stats[newList.toLowerCase()])[0][0]})\n}","import store from './store.js'\n\nfunction range(start, end) {\n    if(start === end) return [start];\n    return [start, ...range(start + 1, end)];\n}\n\nexport async function getAllTeams() {\n    await store.dispatch({type: \"CLEAR_MLB_STATS\"})\n    return fetch('/Teams').then((response) => {\n        return response.json();\n    }).then((data) => {\n        const arr = range(0, parseInt(data.page.totalPages))\n        return Promise.all(arr.map(pageNum => {\n            return getTeam(pageNum)\n        }))\n    })\n}\n\nasync function getTeam(pagenum = 0) {\n    return fetch('/Teams?page='+ pagenum).then((response) => {\n        return response.json();\n    }).then((data) => {\n        return store.dispatch({type: \"ADD_MLB_STATS\", state: data._embedded})\n    })\n}\nexport async function postTeam(json) {\n    console.log(json)\n    await fetch(\"/Teams\", {\n        method: \"POST\",\n        body: JSON.stringify(json),\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n    });\n    getAllTeams()\n}\nexport async function deleteTeam(link) {\n    await fetch(link, {\n        method: \"DELETE\",\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n    })\n    getAllTeams()\n}\n\n\n","import {deleteTeam} from \"./api\";\n\nexport function random() {\n    return Math.random();\n}\n\n\nexport function filterStats(stats, filterSection, filterBar, searchSection, searchBar, currentList, operator) {\n    if (stats === []) return stats;\n    filterBar = (filterBar === '' || filterBar === '0') ? 0 : filterBar.toString().replace(/^0+/, '');\n    stats = stats.filter(team => {\n        const number = team.stats[currentList.toLowerCase()][filterSection]\n        if (operator === '>') {\n            return (parseInt(number) > filterBar)\n        } else if (operator === '=') {\n            return (parseInt(number) === filterBar)\n        } else {\n            return (parseInt(number) < filterBar)\n        }\n    })\n    return stats.filter(team => {\n        const regex = new RegExp(searchBar, 'gi');\n        return team.team[searchSection.toLowerCase()].match(regex)\n    });\n}\n\n\nexport function sortStats(state, sortName, currentList) {\n    if (state === []) return state;\n    return state.sort((a, b) => {\n        if (sortName === \"city\" || sortName === \"name\" || sortName === \"abbreviation\" || sortName === \"officialLogoImageSrc\") return (a.team[sortName].toLowerCase() >= b.team[sortName].toLowerCase()) ? 1 : -1\n        if (currentList === \"Standings\") return (a.stats.standings[sortName] <= b.stats.standings[sortName]) ? 1 : -1\n        if (currentList === \"Batting\") return (a.stats.batting[sortName] <= b.stats.batting[sortName]) ? 1 : -1\n        if (currentList === \"Pitching\") return (a.stats.pitching[sortName] <= b.stats.pitching[sortName]) ? 1 : -1\n        if (currentList === \"Fielding\") return (a.stats.fielding[sortName] <= b.stats.fielding[sortName]) ? 1 : -1\n        return 1\n    })\n}\n\nexport function genFields(mlbStats, currSection) {\n    if (mlbStats == null) return {\"stats\": [], \"info\": []}\n    let stats = []\n    let info = []\n    Object.entries(mlbStats[0].team).map(keyValue => {\n        return stats = stats.concat(keyValue[0])\n    })\n    const currentlist = currSection.toLowerCase()\n    Object.entries(mlbStats[0].stats[currentlist]).map(keyValue => {\n        return stats = stats.concat(keyValue[0])\n    });\n    mlbStats.map(team => {\n        let obj = {};\n        Object.entries(team.team).map(keyValue => {\n            return obj[keyValue[0]] = keyValue[1]\n        });\n        Object.entries(team.stats[currentlist]).map(keyValue => {\n            return obj[keyValue[0]] = keyValue[1]\n        });\n        return info = info.concat(obj)\n    });\n    return {\"stats\": stats, \"info\": info}\n}\n\n\nexport async function removeTeam(e, TeamObj) {\n    await deleteTeam(TeamObj._links.self.href.replace(\"http://localhost:9000\", \"\"))\n    alert(\"Deleted Team \" + TeamObj.team.name)\n}","import React from 'react';\nimport '../stylesheets/bootstrap.css';\nimport { connect } from 'react-redux';\nimport { random, removeTeam } from '../utils'\n\n\n\nfunction TrashCan(props) {\n    let counter = 1\n    return (\n        <div className=\"Column\">\n            {(props.sortedStats.length > 0) ? (<button disabled className=\"contentButton\">Delete Team</button>) : null}\n            {\n                props.sortedStats.map( TeamObj =>{\n                counter++\n                return (\n                <div key={random()} className=\"TrashCans Field\" style={(counter % 2 === 0 ? {backgroundColor: \"gray\"} : {} )}>\n                <i onClick={(e) => {removeTeam(e, TeamObj)}} className=\"Clickable fa fa-trash fa-2x\"></i>\n                </div>\n                )\n            })\n            }\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = {\n};\n\nconst TrashCanContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TrashCan);\n\nexport default TrashCanContainer;\n","import React from 'react';\nimport '../stylesheets/bootstrap.css';\nimport { connect } from 'react-redux';\nimport { random, genFields } from '../utils'\nimport {changeSort} from \"../actions\";\nimport TrashCanContainer from \"./TrashCans\";\n\n\n\n\nfunction Teams(props) {\n    return (\n        <div className=\"ColumnContainer\">\n            {(props.sortedStats.length > 0) ? genFields(props.sortedStats, props.currentList).stats.map(i => {\n            let counter = 1\n            return (\n            <div key={random()} className=\"Column\">\n                <button onClick={() => {changeSort(i)}} className={\"contentButton \" + (props.sortName === i ? \"active\": \"\")}>\n                    {i}\n                </button>\n                {\n                    genFields(props.sortedStats, props.currentList).info.map(y => {\n                        counter++\n                        return (\n                            <div key={random()} className=\"Field\" style={(counter % 2 === 0 ? {backgroundColor: \"gray\"} : {} )}>\n                                {(i === \"officialLogoImageSrc\") ? <img alt=\"\" className=\"Image\" src={y[i]}/> : y[i]}\n                            </div>\n                        )\n                    })\n                }\n                </div>\n                )\n            }) : (<div className=\"EmptyList\">You current filter/search has no results.</div>)}\n            {(props.sortedStats.length > 0) ? <TrashCanContainer sortedStats={props.sortedStats}></TrashCanContainer> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = {\n};\n\nconst TeamsContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Teams);\n\nexport default TeamsContainer;\n","import React from 'react';\nimport '../stylesheets/bootstrap.css';\nimport { connect } from 'react-redux';\nimport { random } from '../utils'\nimport { filterSection } from \"../actions\";\n\n\nfunction options(mlbstats, currentList, filterSection) {\n    let arrayOfHtml = []\n    Object.entries(mlbstats[0].stats[currentList.toLowerCase()]).map(keyValue => {\n        if (keyValue[0] === filterSection) return arrayOfHtml.unshift(<option key={random()} value={keyValue[0]}>{keyValue[0]}</option>)\n        return arrayOfHtml.push(<option key={random()} value={keyValue[0]}>{keyValue[0]}</option>)\n    })\n    return arrayOfHtml\n}\n\n\n\n// App.js\nfunction Options(props) {\n    return (\n        <select onChange={(e) => {filterSection(e.target.value)}} className=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\n            {(props.mlbStats.length > 0) ? options(props.mlbStats, props.currentList, props.filterSection) : null}\n        </select>\n    )\n}\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = {\n};\n\nconst OptionsContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Options);\n\nexport default OptionsContainer;\n","import React from 'react';\nimport '../stylesheets/home.css';\nimport { connect } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { changeList, searchSection, searchBar, filterBar, changeOperator} from '../actions'\nimport TeamsContainer from \"./Teams\";\nimport { filterStats, sortStats } from '../utils'\nimport OptionsContainer from \"./Options\";\n\n\n\nfunction Home(props) {\n        let history = useHistory();\n        const filteredStats = filterStats(props.mlbStats, props.filterSection, props.filterBar, props.searchSection, props.searchBar, props.currentList, props.operator)\n        const sortedStats = sortStats(filteredStats, props.sortName, props.currentList)\n        return (\n            <div className=\"home\">\n                <div className=\"header\">\n\n               </div>\n                <button onClick={() => {history.push('/CreateTeam')}} className=\"formButton\">Create Team</button>\n                <div className=\"customContainer\">\n                    <div className=\"contentHeader\">\n                        <button onClick={() => {changeList(\"Standings\", props.mlbStats)}} className={\"contentButton \" + (props.currentList === \"Standings\" ? \"active\": \"\")}>Over View</button>\n                        <button onClick={() => {changeList(\"Batting\", props.mlbStats)}} className={\"contentButton \" + (props.currentList === \"Batting\" ? \"active\": \"\")}>Batting</button>\n                        <button onClick={() => {changeList(\"Pitching\", props.mlbStats)}} className={\"contentButton \" + (props.currentList === \"Pitching\" ? \"active\": \"\")}>Pitching</button>\n                        <button onClick={() => {changeList(\"Fielding\", props.mlbStats)}} className={\"contentButton \" + (props.currentList === \"Fielding\" ? \"active\": \"\")}>Fielding</button>\n                    </div>\n                    <div className=\"contentFilter\">\n                        <form className=\"Filter\">\n                            <div className=\"mx-auto form-row align-items-center\">\n                                <div className=\"col-lg-12 my-4\">\n                                    <div className=\"input-group mr-sm-2\">\n                                        <div className=\"input-group-prepend\">\n                                            <div className=\"input-group-text\">\n                                                <select onChange={(e) => {searchSection(e.target.value)}} className=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\n                                                    <option value=\"city\" defaultValue>City</option>\n                                                    <option value=\"name\">Name</option>\n                                                    <option value=\"abbreviation\">Abbreviation</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <input onInput={(e) => {searchBar(e)}}  type=\"text\" className=\"form-control\" id=\"inlineFormInputGroupUsername\"/>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                        <form className=\"Filter\">\n                            <div className=\"mx-auto form-row align-items-center\">\n                                <div className=\"col-lg-12 my-4\">\n                                    <div className=\"input-group mr-sm-2\">\n                                        <div className=\"input-group-prepend\">\n                                            <div className=\"input-group-text\">\n                                                <OptionsContainer mlbStats={props.mlbStats} currentList={props.currentList} filterSection={props.filterSection}></OptionsContainer>\n                                            </div>\n                                        </div>\n                                        <div className=\"input-group-prepend\">\n                                            <div className=\"input-group-text\">\n                                                <select onChange={(e) => {changeOperator(e.target.value)}} className=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\n                                                    <option value=\">\" defaultValue>{\">\"}</option>\n                                                    <option value=\"=\">=</option>\n                                                <option value=\"<\">{\"<\"}</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <input onKeyPress={(e) => {\n                                            if (isNaN(e.key)) e.preventDefault()\n                                        }} onInput={(e) => {filterBar(e)}} type=\"text\" className=\"form-control\" id=\"inlineFormInputGroupUsername\" defaultValue=\"0\"/>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <TeamsContainer sortedStats={sortedStats} currentList={props.currentList} sortName={props.sortName}></TeamsContainer>\n                </div>\n            </div>\n        );\n}\n\nconst mapStateToProps = state => ({\n    mlbStats: state.mlb_stats,\n    searchBar: state.search_bar,\n    searchSection: state.search_section,\n    sortName: state.sort_name,\n    filterBar: state.filter_bar,\n    filterSection: state.filter_section,\n    currentList: state.current_list,\n    operator: state.operator\n});\n\nconst mapDispatchToProps = {\n};\n\nconst HomeContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Home);\n\nexport default HomeContainer;\n","import React from 'react';\nimport '../stylesheets/form.css';\nimport '../stylesheets/bootstrap.css';\nimport { connect } from 'react-redux';\nimport { postTeam } from '../api.js';\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\n// function changeLosses(e) {\n//     let val = parseInt(e.target.value)\n//     if (isNaN(val) || val < 0) val = 0\n//     store.dispatch({type: \"UPDATE_LOSSES\", text: val})\n//     store.dispatch({type: \"UPDATE_AVG\"})\n// }\n// function changeWins(e) {\n//     let val = parseInt(e.target.value)\n//     if (isNaN(val) || val < 0) val = 0\n//     store.dispatch({type: \"UPDATE_WINS\", text: val})\n//     store.dispatch({type: \"UPDATE_AVG\"})\n// }\n\nfunction processForm(e, history) {\n    e.preventDefault()\n    const ids = [\"inputCity\",\"inputName\",\"inputAbbreviation\",\"inputImgSrc\",\"inputTAB\",\"inputRuns\",\"inputHits\",\"inputARE\",\"inputIPI\",\"inputAH\",\"inputIPL\",\"inputTC\",\"inputFTO\"]\n    let values = {}\n    ids.map(id => {\n        const value = document.getElementById(id)\n        if (value.value === \"\") {\n            return document.getElementById(\"invalid\" + id).classList.remove(\"hidden\")\n        } else {\n            return values[id] = value.value\n        }\n    })\n    if (Object.entries(values).length !== ids.length) return;\n        let json = {\n        \"team\": {\n            \"city\": values.inputCity,\n            \"name\": values.inputName,\n            \"abbreviation\": values.inputAbbreviation,\n            \"officialLogoImageSrc\": values.inputImgSrc\n        },\n        \"stats\": {\n            \"batting\": {\n                \"atBats\": values.inputTAB,\n                \"runs\": values.inputRuns,\n                \"hits\": values.inputHits\n            },\n            \"pitching\": {\n                \"earnedRunAvg\": values.inputARE,\n                \"inningsPitched\": values.inputIPI,\n                \"hitsAllowed\": values.inputAH\n            },\n            \"fielding\": {\n                \"inningsPlayed\": values.inputIPL,\n                \"totalChances\": values.inputTC,\n                \"fielderTagOuts\": values.inputFTO\n            },\n            \"standings\": {\n                \"wins\": 1,\n                \"losses\": 1,\n                \"winPct\": 0.5\n            }\n        }\n    }\n    postTeam(json)\n    history.push('/')\n}\n\n\n\n\n// App.js\nfunction Form(props) {\n        let history = useHistory();\n        return (\n            <div className=\"form\">\n                <div className=\"header\">\n               </div>\n                <button onClick={() => {history.push('/')}} className=\"formButton\">Back</button>\n                <div className=\"customContainer\">\n                    <div className=\"contentFilter\">\n                    </div>\n                    <form className=\"space\">\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Team Info</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">City</label>\n                                <input type=\"text\" className=\"form-control\" id=\"inputCity\"/>\n                                <div id=\"invalidinputCity\" className=\"invalid-feedback hidden\">\n                                    Please choose a City.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Name</label>\n                                <input type=\"text\" className=\"form-control\" id=\"inputName\"/>\n                                <div id=\"invalidinputName\" className=\"invalid-feedback hidden\">\n                                    Please choose a Name.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <label htmlFor=\"inputZip\">Abbreviation</label>\n                                <input onKeyPress={(e) => {\n                                    if (e.target.value.length > 2) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputAbbreviation\"/>\n                                <div id=\"invalidinputAbbreviation\" className=\"invalid-feedback hidden\">\n                                    Please choose a Abbreviation.\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Image Source</label>\n                            <div className=\"col-md-12\">\n                                <input type=\"text\" className=\"form-control\" id=\"inputImgSrc\"\n                                       placeholder=\"http://example.com\"/>\n                                <div id=\"invalidinputImgSrc\" className=\"invalid-feedback hidden\">\n                                    Please choose a Image Source.\n                                </div>\n                            </div>\n                        </div>\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Batting</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">Times at Bat</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputTAB\"/>\n                                <div id=\"invalidinputTAB\" className=\"invalid-feedback hidden\">\n                                    Please choose a Number of Times at Bat.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Runs</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputRuns\"/>\n                                <div id=\"invalidinputRuns\" className=\"invalid-feedback hidden\">\n                                    Please choose a Number of Runs.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputZip\">Hits</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputHits\"/>\n                                <div id=\"invalidinputHits\" className=\"invalid-feedback hidden\">\n                                    Please choose a Number of Hits.\n                                </div>\n                            </div>\n                        </div>\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Pitching</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">Average Runs Earned</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputARE\"/>\n                                <div id=\"invalidinputARE\" className=\"invalid-feedback hidden\">\n                                    Please choose a Number of Average Runs Earned.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Innings Pitched</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputIPI\"/>\n                                <div id=\"invalidinputIPI\" className=\"invalid-feedback hidden\">\n                                    Please choose a Number of Innings Pitched.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputZip\">Allowed Hits</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputAH\"/>\n                                <div id=\"invalidinputAH\" className=\"invalid-feedback hidden\">\n                                    Please choose a Number of Allowed Hits.\n                                </div>\n                            </div>\n                        </div>\n                        <label htmlFor=\"formGroupExampleInput\" className=\"sectionLabel\">Fieldings</label>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputCity\">Innings Played</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputIPL\"/>\n                                <div id=\"invalidinputIPL\" className=\"invalid-feedback hidden\">\n                                    Please choose a Number of Innings Played.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputState\">Total Chances</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputTC\"/>\n                                <div id=\"invalidinputTC\" className=\"invalid-feedback hidden\">\n                                    Please choose a Number of Total Chances.\n                                </div>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputZip\">Fielder Tag Outs</label>\n                                <input onKeyPress={(e) => {\n                                    if (isNaN(e.key)) e.preventDefault()\n                                }} type=\"text\" className=\"form-control\" id=\"inputFTO\"/>\n                                <div id=\"invalidinputFTO\" className=\"invalid-feedback hidden\">\n                                    Please choose a Number of Fielder Tag Outs.\n                                </div>\n                            </div>\n                        </div>\n                        <button onClick={(e) => {processForm(e, history)}} type=\"sumbit\" className=\"btn btn-primary\">Create Team</button>\n                    </form>\n                </div>\n            </div>\n        );\n}\n\nconst mapStateToProps = state => ({\n    mlbStats: state.mlb_stats,\n    CurrentList: state.current_list,\n    FormAvg: state.form_avg\n});\n\nconst mapDispatchToProps = {\n};\n\nconst FormContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Form);\n\nexport default FormContainer;\n","import React, { Component } from 'react';\nimport HomeContainer from './components/Home.jsx';\nimport FormContainer from './components/Form.jsx';\nimport {getAllTeams} from \"./api\";\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\n\nclass App extends Component {\n    componentDidMount() {\n        return getAllTeams()\n    }\n    render() {\n        return (\n            <div className = \"App\">\n                <header className = \"App-header\">\n                    <Switch>\n                        <Route path=\"/CreateTeam\">\n                            <FormContainer/>\n                        </Route>\n                        <Route path=\"/\">\n                            <HomeContainer/>\n                        </Route>\n                    </Switch>\n                </header>\n            </div>\n        );\n    }\n\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app.js';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './store.js'\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"/>\n      <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\"/>\n      <Provider store={store}>\n          <BrowserRouter>\n            <App/>\n          </BrowserRouter>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}